{ parameter (or (bytes %create_gallery) (address %update_permission_manager)) ;
  storage
    (pair (pair (pair (address %admin) (big_map %galleries address address))
                (pair (big_map %metadata string bytes) (nat %next_serie_id)))
          (pair (address %permission_manager)
                (big_map %series nat (pair (address %address) (address %minter))))) ;
  code { UNPAIR ;
         PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { FAILWITH } { DROP } ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             SENDER ;
             VIEW "is_gallery" bool ;
             IF_NONE
               { PUSH string "NOT_A_GALLERY" ; FAILWITH }
               { IF {} { PUSH string "NOT_A_GALLERY" ; FAILWITH } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             SENDER ;
             MEM ;
             IF { PUSH string "ALREADY_ORIGINATED" ; FAILWITH } {} ;
             EMPTY_BIG_MAP
               nat
               (pair address
                     (map string bytes)
                     nat
                     nat
                     (list (pair address nat))
                     nat
                     (list (pair address nat))) ;
             EMPTY_BIG_MAP nat (pair nat (map string bytes)) ;
             EMPTY_BIG_MAP (pair address (pair address nat)) unit ;
             EMPTY_BIG_MAP nat address ;
             PAIR ;
             PAIR ;
             EMPTY_BIG_MAP address unit ;
             SENDER ;
             PAIR ;
             PUSH nat 0 ;
             DUP 4 ;
             EMPTY_BIG_MAP string bytes ;
             DIG 6 ;
             SOME ;
             PUSH string "" ;
             UPDATE ;
             PAIR ;
             PAIR ;
             PUSH nat 50 ;
             DIG 4 ;
             PAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             PAIR ;
             PUSH mutez 0 ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter
                   (or (or (or (or %admin (address %add_minter) (address %remove_minter))
                               (pair %burn_token (address %owner) (nat %token_id)))
                           (or (list %create_proposals
                                  (pair (address %minter)
                                        (bytes %edition_info)
                                        (nat %total_edition_number)
                                        (nat %royalty)
                                        (list %splits (pair (address %address) (nat %pct)))
                                        (nat %gallery_comission)
                                        (list %gallery_comission_splits (pair (address %address) (nat %pct)))))
                               (or %fA2
                                  (or (pair %balance_of
                                         (list %requests (pair (address %owner) (nat %token_id)))
                                         (contract %callback
                                            (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                                      (list %transfer
                                         (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
                                  (list %update_operators
                                     (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                         (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))))
                       (or (or (list %mint_editions nat) (list %remove_proposals nat))
                           (bytes %update_metadata))) ;
                 storage
                   (pair (pair (pair (pair %admin (address %admin) (big_map %minters address unit))
                                     (pair %assets
                                        (pair (big_map %ledger nat address)
                                              (big_map %operators (pair address (pair address nat)) unit))
                                        (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                               (pair (big_map %editions_metadata
                                        nat
                                        (pair (address %minter)
                                              (map %edition_info string bytes)
                                              (nat %total_edition_number)
                                              (nat %royalty)
                                              (list %splits (pair (address %address) (nat %pct)))
                                              (nat %gallery_comission)
                                              (list %gallery_comission_splits (pair (address %address) (nat %pct)))))
                                     (nat %max_editions_per_run)))
                         (pair (pair (big_map %metadata string bytes)
                                     (big_map %mint_proposals
                                        nat
                                        (pair (address %minter)
                                              (map %edition_info string bytes)
                                              (nat %total_edition_number)
                                              (nat %royalty)
                                              (list %splits (pair (address %address) (nat %pct)))
                                              (nat %gallery_comission)
                                              (list %gallery_comission_splits (pair (address %address) (nat %pct))))))
                               (nat %next_edition_id))) ;
                 code { LAMBDA
                          (pair (pair (list (pair (option address) (list (pair (option address) nat nat))))
                                      (lambda
                                         (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                                         unit))
                                (pair (pair (big_map nat address) (big_map (pair address (pair address nat)) unit))
                                      (big_map nat (pair nat (map string bytes)))))
                          (pair (list operation)
                                (pair (pair (big_map nat address) (big_map (pair address (pair address nat)) unit))
                                      (big_map nat (pair nat (map string bytes)))))
                          { UNPAIR ;
                            UNPAIR ;
                            DUP 3 ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            ITER { DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   ITER { SWAP ;
                                          DUP 3 ;
                                          CAR ;
                                          IF_NONE
                                            { UNIT }
                                            { DUP 6 ;
                                              CAR ;
                                              CDR ;
                                              DUP 4 ;
                                              GET 3 ;
                                              PAIR ;
                                              SENDER ;
                                              DIG 2 ;
                                              PAIR ;
                                              PAIR ;
                                              DUP 5 ;
                                              SWAP ;
                                              EXEC } ;
                                          DROP ;
                                          PUSH nat 1 ;
                                          DUP 3 ;
                                          GET 4 ;
                                          COMPARE ;
                                          GT ;
                                          IF { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                                             { PUSH nat 0 ;
                                               DUP 3 ;
                                               GET 4 ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DUP ;
                                                    DIG 2 ;
                                                    GET 3 ;
                                                    GET ;
                                                    IF_NONE { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { DROP } }
                                                  { SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    GET 3 ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    IF_NONE
                                                      { DROP }
                                                      { DUP 3 ;
                                                        DUP 3 ;
                                                        GET ;
                                                        IF_NONE
                                                          { DROP 3 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                          { COMPARE ;
                                                            EQ ;
                                                            IF { NONE address ; SWAP ; UPDATE }
                                                               { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } } } ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    CAR ;
                                                    IF_NONE { SWAP ; DROP } { DIG 2 ; GET 3 ; SWAP ; SOME ; SWAP ; UPDATE } } } } ;
                                   SWAP ;
                                   DROP } ;
                            SWAP ;
                            DROP ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DIG 2 ;
                            CAR ;
                            CDR ;
                            DIG 2 ;
                            PAIR ;
                            PAIR ;
                            NIL operation ;
                            PAIR } ;
                        LAMBDA
                          (pair address (big_map address unit))
                          unit
                          { CAR ;
                            SENDER ;
                            COMPARE ;
                            NEQ ;
                            IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
                        LAMBDA
                          (pair address (pair address (big_map address unit)))
                          unit
                          { UNPAIR ;
                            SWAP ;
                            CDR ;
                            SWAP ;
                            GET ;
                            IF_NONE { PUSH string "NOT_A_MINTER" ; FAILWITH } { DROP ; UNIT } } ;
                        LAMBDA (pair nat (pair address nat)) nat { UNPAIR ; SWAP ; CDR ; ADD } ;
                        DIG 4 ;
                        UNPAIR ;
                        PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                        PUSH mutez 0 ;
                        AMOUNT ;
                        COMPARE ;
                        EQ ;
                        NOT ;
                        IF { FAILWITH } { DROP } ;
                        IF_LEFT
                          { IF_LEFT
                              { DIG 2 ;
                                DIG 3 ;
                                DIG 5 ;
                                DROP 3 ;
                                IF_LEFT
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DUP ;
                                    DIG 4 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    SWAP ;
                                    IF_LEFT
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        MEM ;
                                        IF { DROP 2 ; PUSH string "ALREADY_MINTER" ; FAILWITH }
                                           { SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             UNIT ;
                                             DIG 2 ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             SWAP ;
                                             CAR ;
                                             PAIR ;
                                             NIL operation ;
                                             PAIR } }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        MEM ;
                                        IF { SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CDR ;
                                             SWAP ;
                                             NONE unit ;
                                             SWAP ;
                                             UPDATE ;
                                             SWAP ;
                                             CAR ;
                                             PAIR ;
                                             NIL operation ;
                                             PAIR }
                                           { DROP 2 ; PUSH string "MINTER_NOT_FOUND" ; FAILWITH } } ;
                                    UNPAIR ;
                                    DUP 3 ;
                                    CDR ;
                                    DUP 4 ;
                                    CAR ;
                                    CDR ;
                                    DIG 4 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    DIG 4 ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR }
                                  { DIG 2 ;
                                    DROP ;
                                    PUSH string "NOT_OWNER" ;
                                    SENDER ;
                                    DUP 3 ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    NOT ;
                                    IF { FAILWITH } { DROP } ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    SENDER ;
                                    DIG 2 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    DIG 2 ;
                                    GET ;
                                    IF_NONE
                                      { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                      { COMPARE ;
                                        EQ ;
                                        IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } } ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    DUP 4 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    UNPAIR ;
                                    CDR ;
                                    DUP 6 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    DIG 5 ;
                                    CDR ;
                                    NONE address ;
                                    SWAP ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    DIG 3 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    NIL operation ;
                                    PAIR } }
                              { IF_LEFT
                                  { DIG 5 ;
                                    DROP ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DIG 5 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    ITER { SWAP ;
                                           PUSH nat 250 ;
                                           DUP 3 ;
                                           GET 7 ;
                                           COMPARE ;
                                           LE ;
                                           NOT ;
                                           IF { PUSH string "ROYALTIES_CANNOT_EXCEED_25_PERCENT" ; FAILWITH } {} ;
                                           PUSH nat 500 ;
                                           DUP 3 ;
                                           GET 11 ;
                                           COMPARE ;
                                           LE ;
                                           NOT ;
                                           IF { PUSH string "COMISSIONS_CANNOT_EXCEED_50_PERCENT" ; FAILWITH } {} ;
                                           PUSH nat 50 ;
                                           DUP 3 ;
                                           GET 7 ;
                                           COMPARE ;
                                           GE ;
                                           NOT ;
                                           IF { PUSH string "ROYALTIES_MINIMUM_5_PERCENT" ; FAILWITH } {} ;
                                           PUSH nat 1 ;
                                           DUP 3 ;
                                           GET 5 ;
                                           COMPARE ;
                                           GE ;
                                           NOT ;
                                           IF { PUSH string "EDITION_NUMBER_SHOULD_BE_AT_LEAST_ONE" ; FAILWITH } {} ;
                                           DUP ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           DUP 3 ;
                                           GET 5 ;
                                           COMPARE ;
                                           LE ;
                                           NOT ;
                                           IF { PUSH string "EDITION_RUN_TOO_LARGE" ; FAILWITH } {} ;
                                           DUP ;
                                           CAR ;
                                           CAR ;
                                           CAR ;
                                           DUP 3 ;
                                           CAR ;
                                           PAIR ;
                                           DUP 5 ;
                                           SWAP ;
                                           EXEC ;
                                           DROP ;
                                           PUSH nat 0 ;
                                           DUP 3 ;
                                           GET 9 ;
                                           ITER { SWAP ; PAIR ; DUP 4 ; SWAP ; EXEC } ;
                                           PUSH nat 1000 ;
                                           SWAP ;
                                           COMPARE ;
                                           EQ ;
                                           NOT ;
                                           IF { PUSH string "TOTAL_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH } {} ;
                                           PUSH nat 0 ;
                                           DUP 3 ;
                                           GET 12 ;
                                           ITER { SWAP ; PAIR ; DUP 4 ; SWAP ; EXEC } ;
                                           PUSH nat 1000 ;
                                           SWAP ;
                                           COMPARE ;
                                           EQ ;
                                           NOT ;
                                           IF { PUSH string "TOTAL_COMISSION_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH } {} ;
                                           PUSH nat 1 ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CDR ;
                                           ADD ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CAR ;
                                           PAIR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CAR ;
                                           PAIR ;
                                           DUP ;
                                           CDR ;
                                           CDR ;
                                           DUP 3 ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           DUP 5 ;
                                           GET 12 ;
                                           DUP 6 ;
                                           GET 11 ;
                                           DUP 7 ;
                                           GET 9 ;
                                           DUP 8 ;
                                           GET 7 ;
                                           DUP 9 ;
                                           GET 5 ;
                                           EMPTY_MAP string bytes ;
                                           DUP 11 ;
                                           GET 3 ;
                                           SOME ;
                                           PUSH string "" ;
                                           UPDATE ;
                                           DIG 10 ;
                                           CAR ;
                                           PAIR 7 ;
                                           DIG 4 ;
                                           CDR ;
                                           CDR ;
                                           SWAP ;
                                           SOME ;
                                           SWAP ;
                                           UPDATE ;
                                           DUP 3 ;
                                           CDR ;
                                           CAR ;
                                           CAR ;
                                           PAIR ;
                                           PAIR ;
                                           SWAP ;
                                           CAR ;
                                           PAIR } ;
                                    SWAP ;
                                    DIG 2 ;
                                    DROP 2 ;
                                    NIL operation ;
                                    PAIR }
                                  { DIG 2 ;
                                    DIG 3 ;
                                    DIG 4 ;
                                    DROP 3 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    IF_LEFT
                                      { IF_LEFT
                                          { DIG 3 ;
                                            DROP ;
                                            DUP ;
                                            CAR ;
                                            MAP { DUP 3 ;
                                                  CAR ;
                                                  CAR ;
                                                  SWAP ;
                                                  DUP ;
                                                  DUG 2 ;
                                                  CDR ;
                                                  GET ;
                                                  IF_NONE
                                                    { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                    { SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      CAR ;
                                                      SWAP ;
                                                      COMPARE ;
                                                      EQ ;
                                                      IF { PUSH nat 1 } { PUSH nat 0 } ;
                                                      SWAP ;
                                                      PAIR } } ;
                                            SWAP ;
                                            CDR ;
                                            PUSH mutez 0 ;
                                            DIG 2 ;
                                            TRANSFER_TOKENS ;
                                            SWAP ;
                                            NIL operation ;
                                            DIG 2 ;
                                            CONS ;
                                            PAIR }
                                          { MAP { DUP ;
                                                  CDR ;
                                                  MAP { DUP ; GET 4 ; SWAP ; DUP ; DUG 2 ; GET 3 ; DIG 2 ; CAR ; SOME ; PAIR 3 } ;
                                                  SWAP ;
                                                  CAR ;
                                                  SOME ;
                                                  PAIR } ;
                                            SWAP ;
                                            LAMBDA
                                              (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                                              unit
                                              { UNPAIR ;
                                                UNPAIR ;
                                                DIG 2 ;
                                                UNPAIR ;
                                                DUP 4 ;
                                                DUP 4 ;
                                                COMPARE ;
                                                EQ ;
                                                IF { DROP 4 ; UNIT }
                                                   { DIG 3 ;
                                                     PAIR ;
                                                     DIG 2 ;
                                                     PAIR ;
                                                     MEM ;
                                                     IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                                            DIG 2 ;
                                            PAIR ;
                                            PAIR ;
                                            DIG 2 ;
                                            SWAP ;
                                            EXEC } }
                                      { DIG 3 ;
                                        DROP ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        ITER { SWAP ;
                                               SENDER ;
                                               DUP 3 ;
                                               IF_LEFT {} {} ;
                                               CAR ;
                                               COMPARE ;
                                               EQ ;
                                               IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                               SWAP ;
                                               IF_LEFT
                                                 { SWAP ;
                                                   UNIT ;
                                                   SOME ;
                                                   DUP 3 ;
                                                   GET 4 ;
                                                   DUP 4 ;
                                                   GET 3 ;
                                                   PAIR ;
                                                   DIG 3 ;
                                                   CAR ;
                                                   PAIR ;
                                                   UPDATE }
                                                 { DUP ;
                                                   DUG 2 ;
                                                   GET 4 ;
                                                   DUP 3 ;
                                                   GET 3 ;
                                                   PAIR ;
                                                   DIG 2 ;
                                                   CAR ;
                                                   PAIR ;
                                                   NONE unit ;
                                                   SWAP ;
                                                   UPDATE } } ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        SWAP ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } ;
                                    UNPAIR ;
                                    DUP 3 ;
                                    CDR ;
                                    DUP 4 ;
                                    CAR ;
                                    CDR ;
                                    DIG 3 ;
                                    DIG 4 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR } } }
                          { DIG 2 ;
                            DROP ;
                            IF_LEFT
                              { IF_LEFT
                                  { DIG 3 ;
                                    DROP ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    SENDER ;
                                    PAIR ;
                                    DIG 3 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    ITER { SWAP ;
                                           DUP ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           DUP 3 ;
                                           GET ;
                                           IF_NONE
                                             { DROP 2 ; PUSH string "FA2_PROPOSAL_UNDEFINED" ; FAILWITH }
                                             { PUSH string "MINTER_MUST_BE_SENDER" ;
                                               SENDER ;
                                               DUP 3 ;
                                               CAR ;
                                               COMPARE ;
                                               EQ ;
                                               NOT ;
                                               IF { FAILWITH } { DROP } ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               CDR ;
                                               DUP 3 ;
                                               CAR ;
                                               CDR ;
                                               CDR ;
                                               DUP 4 ;
                                               CAR ;
                                               CDR ;
                                               CAR ;
                                               DUP 4 ;
                                               DUP 7 ;
                                               SWAP ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               PAIR ;
                                               DUP 4 ;
                                               CAR ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               DUP ;
                                               CDR ;
                                               CDR ;
                                               DUP 4 ;
                                               CDR ;
                                               CAR ;
                                               CDR ;
                                               DUP 6 ;
                                               NONE (pair address
                                                          (map string bytes)
                                                          nat
                                                          nat
                                                          (list (pair address nat))
                                                          nat
                                                          (list (pair address nat))) ;
                                               SWAP ;
                                               UPDATE ;
                                               DUP 3 ;
                                               CDR ;
                                               CAR ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               SWAP ;
                                               CAR ;
                                               PAIR ;
                                               DUP ;
                                               CAR ;
                                               CDR ;
                                               CDR ;
                                               DIG 4 ;
                                               MUL ;
                                               DIG 2 ;
                                               GET 5 ;
                                               NIL address ;
                                               DIG 4 ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               LEFT (list address) ;
                                               LOOP_LEFT
                                                 { UNPAIR ;
                                                   UNPAIR ;
                                                   PUSH nat 0 ;
                                                   DUP 4 ;
                                                   COMPARE ;
                                                   GT ;
                                                   IF { PUSH nat 1 ;
                                                        DIG 3 ;
                                                        SUB ;
                                                        ABS ;
                                                        DUG 2 ;
                                                        DUP ;
                                                        DUG 3 ;
                                                        CONS ;
                                                        DIG 2 ;
                                                        PAIR ;
                                                        PAIR ;
                                                        LEFT (list address) }
                                                      { DIG 2 ; DROP 2 ; RIGHT (pair (pair address (list address)) nat) } } ;
                                               SWAP ;
                                               NIL (pair nat address) ;
                                               PAIR ;
                                               SWAP ;
                                               ITER { SWAP ;
                                                      UNPAIR ;
                                                      PUSH nat 1 ;
                                                      DUP 3 ;
                                                      ADD ;
                                                      SWAP ;
                                                      DIG 3 ;
                                                      DIG 3 ;
                                                      PAIR ;
                                                      CONS ;
                                                      PAIR } ;
                                               CAR ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               CAR ;
                                               CAR ;
                                               CDR ;
                                               NIL (pair (option address) nat nat) ;
                                               PAIR ;
                                               SWAP ;
                                               ITER { DUP ;
                                                      DUG 2 ;
                                                      CAR ;
                                                      SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      CDR ;
                                                      CAR ;
                                                      CAR ;
                                                      SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      MEM ;
                                                      IF { DROP 3 ; PUSH string "FA2_INVALID_TOKEN_ID" ; FAILWITH }
                                                         { SWAP ;
                                                           DUP ;
                                                           DUG 2 ;
                                                           CDR ;
                                                           DIG 2 ;
                                                           CAR ;
                                                           PUSH nat 1 ;
                                                           DIG 3 ;
                                                           DIG 4 ;
                                                           CDR ;
                                                           SOME ;
                                                           PAIR 3 ;
                                                           CONS ;
                                                           PAIR } } ;
                                               DUP ;
                                               CDR ;
                                               LAMBDA
                                                 (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                                                 unit
                                                 { DROP ; UNIT } ;
                                               NIL (pair (option address) (list (pair (option address) nat nat))) ;
                                               DIG 3 ;
                                               CAR ;
                                               NONE address ;
                                               PAIR ;
                                               CONS ;
                                               PAIR ;
                                               PAIR ;
                                               DUP 3 ;
                                               SWAP ;
                                               EXEC ;
                                               CDR ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               CDR ;
                                               DUP 3 ;
                                               CAR ;
                                               CDR ;
                                               DIG 2 ;
                                               DIG 3 ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               PAIR } } ;
                                    SWAP ;
                                    DROP ;
                                    NIL operation ;
                                    PAIR }
                                  { DIG 2 ;
                                    DIG 4 ;
                                    DROP 2 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DIG 3 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    ITER { SWAP ;
                                           DUP ;
                                           CDR ;
                                           CDR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           DIG 3 ;
                                           NONE (pair address
                                                      (map string bytes)
                                                      nat
                                                      nat
                                                      (list (pair address nat))
                                                      nat
                                                      (list (pair address nat))) ;
                                           SWAP ;
                                           UPDATE ;
                                           DUP 3 ;
                                           CDR ;
                                           CAR ;
                                           CAR ;
                                           PAIR ;
                                           PAIR ;
                                           SWAP ;
                                           CAR ;
                                           PAIR } ;
                                    NIL operation ;
                                    PAIR } }
                              { DIG 2 ;
                                DIG 4 ;
                                DROP 2 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                DIG 3 ;
                                SWAP ;
                                EXEC ;
                                DROP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CAR ;
                                CAR ;
                                PUSH string "" ;
                                GET ;
                                IF_NONE
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CDR ;
                                    DUP 3 ;
                                    CDR ;
                                    CAR ;
                                    CDR ;
                                    DUP 4 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    DIG 3 ;
                                    SOME ;
                                    PUSH string "" ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    CAR ;
                                    PAIR ;
                                    NIL operation ;
                                    PAIR }
                                  { DROP ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CDR ;
                                    DUP 3 ;
                                    CDR ;
                                    CAR ;
                                    CDR ;
                                    DUP 4 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    DIG 3 ;
                                    SOME ;
                                    PUSH string "" ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    CAR ;
                                    PAIR ;
                                    NIL operation ;
                                    PAIR } } } } ;
                 view "token_metadata"
                      nat
                      (pair (nat %token_id) (map %token_info string bytes))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CAR ;
                        CDR ;
                        CAR ;
                        CAR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE
                          { DROP 2 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DROP ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CDR ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            EDIV ;
                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                            CAR ;
                            DUP 3 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE
                              { DROP 3 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                              { GET 3 ;
                                PUSH nat 1 ;
                                DIG 4 ;
                                CAR ;
                                CDR ;
                                CDR ;
                                DIG 3 ;
                                MUL ;
                                DUP 4 ;
                                SUB ;
                                ADD ;
                                PACK ;
                                PUSH string "edition_number" ;
                                PAIR 3 ;
                                UNPAIR 3 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                SWAP ;
                                PAIR } } } ;
                 view "royalty_distribution"
                      nat
                      (pair address (pair (nat %royalty) (list %splits (pair (address %address) (nat %pct)))))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DUP ; GET 9 ; SWAP ; DUP ; DUG 2 ; GET 7 ; PAIR ; SWAP ; CAR ; PAIR } } ;
                 view "splits"
                      nat
                      (list (pair (address %address) (nat %pct)))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { GET 9 } } ;
                 view "royalty_splits"
                      nat
                      (pair (nat %royalty) (list %splits (pair (address %address) (nat %pct))))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DUP ; GET 9 ; SWAP ; GET 7 ; PAIR } } ;
                 view "royalty"
                      nat
                      nat
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { GET 7 } } ;
                 view "minter"
                      nat
                      address
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { CAR } } ;
                 view "is_token_minter"
                      (pair address nat)
                      bool
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        DIG 2 ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { SWAP ;
                            CAR ;
                            SWAP ;
                            CAR ;
                            COMPARE ;
                            EQ ;
                            IF { PUSH bool True } { PUSH bool False } } } ;
                 view "is_unique_edition"
                      nat
                      bool
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { PUSH nat 1 ;
                            SWAP ;
                            GET 5 ;
                            COMPARE ;
                            GT ;
                            IF { PUSH bool False } { PUSH bool True } } } ;
                 view "comission_splits"
                      nat
                      (pair (nat %royalty) (list %splits (pair (address %address) (nat %pct))))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DUP ; GET 12 ; SWAP ; GET 11 ; PAIR } } } ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             DUP 4 ;
             CDR ;
             SENDER ;
             PAIR 3 ;
             UNPAIR 3 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DIG 4 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             DIG 2 ;
             CAR ;
             CONS ;
             PAIR }
           { SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             SWAP ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             NIL operation ;
             PAIR } } }

