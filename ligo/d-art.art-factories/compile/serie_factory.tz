{ parameter (or (bytes %create_serie) (address %update_permission_manager)) ;
  storage
    (pair (pair (pair (address %admin) (big_map %metadata string bytes))
                (nat %next_serie_id)
                (address %permission_manager))
          (big_map %series nat (pair (address %address) (address %minter)))) ;
  code { UNPAIR ;
         PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { FAILWITH } { DROP } ;
         IF_LEFT
           { DUP 2 ;
             CAR ;
             CDR ;
             CDR ;
             LAMBDA unit address { DROP ; SENDER } ;
             VIEW "is_minter" bool ;
             IF_NONE
               { PUSH string "NOT_A_MINTER" ; FAILWITH }
               { IF {} { PUSH string "NOT_A_MINTER" ; FAILWITH } } ;
             PUSH bool False ;
             SENDER ;
             PAIR ;
             PUSH nat 0 ;
             EMPTY_BIG_MAP string bytes ;
             DIG 3 ;
             SOME ;
             PUSH string "" ;
             UPDATE ;
             PAIR ;
             PUSH nat 50 ;
             EMPTY_BIG_MAP nat (pair (map string bytes) nat nat (list (pair address nat))) ;
             PAIR ;
             EMPTY_BIG_MAP nat (pair nat (map string bytes)) ;
             EMPTY_BIG_MAP (pair address address nat) unit ;
             EMPTY_BIG_MAP nat address ;
             PAIR ;
             PAIR ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             PAIR ;
             PUSH mutez 0 ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter
                   (or (or (or (pair %burn_token (address %owner) (nat %token_id))
                               (or %fA2
                                  (or (pair %balance_of
                                         (list %requests (pair (address %owner) (nat %token_id)))
                                         (contract %callback
                                            (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                                      (list %transfer
                                         (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
                                  (list %update_operators
                                     (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                         (pair %remove_operator (address %owner) (address %operator) (nat %token_id))))))
                           (or (list %mint_editions
                                  (pair (bytes %edition_info)
                                        (nat %total_edition_number)
                                        (nat %royalty)
                                        (list %splits (pair (address %address) (nat %pct)))))
                               (bool %revoke_minting)))
                       (bytes %update_metadata)) ;
                 storage
                   (pair (pair (pair (pair %admin (address %admin) (bool %minting_revoked))
                                     (pair %assets
                                        (pair (big_map %ledger nat address)
                                              (big_map %operators (pair address address nat) unit))
                                        (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                               (big_map %editions_metadata
                                  nat
                                  (pair (map %edition_info string bytes)
                                        (nat %total_edition_number)
                                        (nat %royalty)
                                        (list %splits (pair (address %address) (nat %pct)))))
                               (nat %max_editions_per_run))
                         (big_map %metadata string bytes)
                         (nat %next_edition_id)) ;
                 code { LAMBDA
                          (pair (pair (list (pair (option address) (list (pair (option address) nat nat))))
                                      (lambda (pair (pair address address) nat (big_map (pair address address nat) unit)) unit))
                                (pair (big_map nat address) (big_map (pair address address nat) unit))
                                (big_map nat (pair nat (map string bytes))))
                          (pair (list operation)
                                (pair (big_map nat address) (big_map (pair address address nat) unit))
                                (big_map nat (pair nat (map string bytes))))
                          { UNPAIR ;
                            UNPAIR ;
                            DUP 3 ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            ITER { SWAP ;
                                   DUP 2 ;
                                   CDR ;
                                   ITER { SWAP ;
                                          DUP 3 ;
                                          CAR ;
                                          IF_NONE
                                            {}
                                            { DUP 6 ;
                                              CAR ;
                                              CDR ;
                                              DUP 4 ;
                                              GET 3 ;
                                              PAIR ;
                                              SENDER ;
                                              DIG 2 ;
                                              PAIR ;
                                              PAIR ;
                                              DUP 5 ;
                                              SWAP ;
                                              EXEC ;
                                              DROP } ;
                                          PUSH nat 1 ;
                                          DUP 3 ;
                                          GET 4 ;
                                          COMPARE ;
                                          GT ;
                                          IF { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                                             { PUSH nat 0 ;
                                               DUP 3 ;
                                               GET 4 ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DUP ;
                                                    DIG 2 ;
                                                    GET 3 ;
                                                    GET ;
                                                    IF_NONE { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { DROP } }
                                                  { DUP 2 ;
                                                    GET 3 ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    IF_NONE
                                                      { DROP }
                                                      { DUP 3 ;
                                                        DUP 3 ;
                                                        GET ;
                                                        IF_NONE
                                                          { DROP 3 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                          { COMPARE ;
                                                            EQ ;
                                                            IF { NONE address ; SWAP ; UPDATE }
                                                               { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } } } ;
                                                    DUP 2 ;
                                                    CAR ;
                                                    IF_NONE { SWAP ; DROP } { DIG 2 ; GET 3 ; SWAP ; SOME ; SWAP ; UPDATE } } } } ;
                                   SWAP ;
                                   DROP } ;
                            SWAP ;
                            DROP ;
                            DUP 2 ;
                            CDR ;
                            DIG 2 ;
                            CAR ;
                            CDR ;
                            DIG 2 ;
                            PAIR ;
                            PAIR ;
                            NIL operation ;
                            PAIR } ;
                        LAMBDA
                          (pair address bool)
                          unit
                          { CAR ;
                            SENDER ;
                            COMPARE ;
                            NEQ ;
                            IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
                        LAMBDA
                          (pair address bool)
                          unit
                          { CDR ; IF { PUSH string "MINTING_IS_REVOKED" ; FAILWITH } { UNIT } } ;
                        DIG 3 ;
                        UNPAIR ;
                        PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                        PUSH mutez 0 ;
                        AMOUNT ;
                        COMPARE ;
                        EQ ;
                        NOT ;
                        IF { FAILWITH } { DROP } ;
                        IF_LEFT
                          { IF_LEFT
                              { DIG 2 ;
                                DIG 3 ;
                                DROP 2 ;
                                IF_LEFT
                                  { DIG 2 ;
                                    DROP ;
                                    PUSH string "NOT_OWNER" ;
                                    SENDER ;
                                    DUP 3 ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    NOT ;
                                    IF { FAILWITH } { DROP } ;
                                    DUP 2 ;
                                    DUP 2 ;
                                    CDR ;
                                    SENDER ;
                                    DIG 2 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    DIG 2 ;
                                    GET ;
                                    IF_NONE
                                      { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                      { COMPARE ;
                                        EQ ;
                                        IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } } ;
                                    DUP 2 ;
                                    CDR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    DUP 4 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    UNPAIR ;
                                    CDR ;
                                    DUP 6 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    DIG 5 ;
                                    CDR ;
                                    NONE address ;
                                    SWAP ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    DIG 3 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    NIL operation }
                                  { DUP 2 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    IF_LEFT
                                      { IF_LEFT
                                          { DIG 3 ;
                                            DROP ;
                                            DUP ;
                                            CAR ;
                                            MAP { DUP 3 ;
                                                  CAR ;
                                                  CAR ;
                                                  DUP 2 ;
                                                  CDR ;
                                                  GET ;
                                                  IF_NONE
                                                    { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                    { DUP 2 ;
                                                      CAR ;
                                                      SWAP ;
                                                      COMPARE ;
                                                      EQ ;
                                                      IF { PUSH nat 1 } { PUSH nat 0 } ;
                                                      SWAP ;
                                                      PAIR } } ;
                                            SWAP ;
                                            CDR ;
                                            PUSH mutez 0 ;
                                            DIG 2 ;
                                            TRANSFER_TOKENS ;
                                            SWAP ;
                                            NIL operation ;
                                            DIG 2 ;
                                            CONS ;
                                            PAIR }
                                          { MAP { DUP ;
                                                  CDR ;
                                                  MAP { DUP ; GET 3 ; DUP 2 ; CAR ; SOME ; DIG 2 ; GET 4 ; PAIR ; PAIR } ;
                                                  SWAP ;
                                                  CAR ;
                                                  SOME ;
                                                  PAIR } ;
                                            SWAP ;
                                            LAMBDA
                                              (pair (pair address address) nat (big_map (pair address address nat) unit))
                                              unit
                                              { UNPAIR ;
                                                UNPAIR ;
                                                DIG 2 ;
                                                UNPAIR ;
                                                DUP 4 ;
                                                DUP 4 ;
                                                COMPARE ;
                                                EQ ;
                                                IF { DROP 4 ; UNIT }
                                                   { DIG 3 ;
                                                     PAIR ;
                                                     DIG 2 ;
                                                     PAIR ;
                                                     MEM ;
                                                     IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                                            DIG 2 ;
                                            PAIR ;
                                            PAIR ;
                                            DIG 2 ;
                                            SWAP ;
                                            EXEC } }
                                      { DIG 3 ;
                                        DROP ;
                                        SENDER ;
                                        DUP 3 ;
                                        CAR ;
                                        CDR ;
                                        DIG 2 ;
                                        ITER { SWAP ;
                                               DUP 3 ;
                                               DUP 3 ;
                                               IF_LEFT {} {} ;
                                               CAR ;
                                               COMPARE ;
                                               EQ ;
                                               IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                               SWAP ;
                                               IF_LEFT
                                                 { SWAP ;
                                                   UNIT ;
                                                   SOME ;
                                                   DUP 3 ;
                                                   GET 4 ;
                                                   DUP 4 ;
                                                   GET 3 ;
                                                   PAIR ;
                                                   DIG 3 ;
                                                   CAR ;
                                                   PAIR ;
                                                   UPDATE }
                                                 { SWAP ;
                                                   DUP 2 ;
                                                   GET 4 ;
                                                   DUP 3 ;
                                                   GET 3 ;
                                                   PAIR ;
                                                   DIG 2 ;
                                                   CAR ;
                                                   PAIR ;
                                                   NONE unit ;
                                                   SWAP ;
                                                   UPDATE } } ;
                                        SWAP ;
                                        DROP ;
                                        DUP 2 ;
                                        CDR ;
                                        SWAP ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } ;
                                    UNPAIR ;
                                    DUP 3 ;
                                    CDR ;
                                    DUP 4 ;
                                    CAR ;
                                    CDR ;
                                    DIG 3 ;
                                    DIG 4 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP } }
                              { IF_LEFT
                                  { DUP 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DIG 4 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    DUP 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DIG 3 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    ITER { SWAP ;
                                           PUSH nat 250 ;
                                           DUP 3 ;
                                           GET 5 ;
                                           COMPARE ;
                                           LE ;
                                           NOT ;
                                           IF { PUSH string "ROYALTIES_CANNOT_EXCEED_25_PERCENT" ; FAILWITH } {} ;
                                           PUSH nat 1 ;
                                           DUP 3 ;
                                           GET 3 ;
                                           COMPARE ;
                                           GE ;
                                           NOT ;
                                           IF { PUSH string "EDITION_NUMBER_SHOULD_BE_AT_LEAST_ONE" ; FAILWITH } {} ;
                                           DUP ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           DUP 3 ;
                                           GET 3 ;
                                           COMPARE ;
                                           LE ;
                                           NOT ;
                                           IF { PUSH string "EDITION_RUN_TOO_LARGE" ; FAILWITH } {} ;
                                           PUSH nat 0 ;
                                           DUP 3 ;
                                           GET 6 ;
                                           ITER { CDR ; ADD } ;
                                           PUSH nat 1000 ;
                                           SWAP ;
                                           COMPARE ;
                                           EQ ;
                                           NOT ;
                                           IF { PUSH string "TOTAL_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH } {} ;
                                           DUP 2 ;
                                           GET 6 ;
                                           DUP 3 ;
                                           GET 5 ;
                                           DUP 4 ;
                                           GET 3 ;
                                           EMPTY_MAP string bytes ;
                                           DIG 5 ;
                                           CAR ;
                                           SOME ;
                                           PUSH string "" ;
                                           UPDATE ;
                                           PAIR 4 ;
                                           PUSH nat 1 ;
                                           DUP 3 ;
                                           CDR ;
                                           CDR ;
                                           ADD ;
                                           DUP 3 ;
                                           CDR ;
                                           CAR ;
                                           PAIR ;
                                           DUP 3 ;
                                           CAR ;
                                           PAIR ;
                                           DUP ;
                                           CDR ;
                                           DUP 2 ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           DUP 5 ;
                                           CAR ;
                                           CDR ;
                                           CAR ;
                                           DUP 5 ;
                                           DUP 7 ;
                                           CDR ;
                                           CDR ;
                                           SWAP ;
                                           SOME ;
                                           SWAP ;
                                           UPDATE ;
                                           PAIR ;
                                           DIG 2 ;
                                           CAR ;
                                           CAR ;
                                           PAIR ;
                                           PAIR ;
                                           SWAP ;
                                           PAIR ;
                                           SENDER ;
                                           DIG 2 ;
                                           CDR ;
                                           CDR ;
                                           DIG 2 ;
                                           UNPAIR ;
                                           DUP 2 ;
                                           CAR ;
                                           CDR ;
                                           CDR ;
                                           DIG 3 ;
                                           MUL ;
                                           SWAP ;
                                           GET 3 ;
                                           NIL address ;
                                           DIG 4 ;
                                           PAIR ;
                                           PAIR ;
                                           LEFT (list address) ;
                                           LOOP_LEFT
                                             { UNPAIR ;
                                               UNPAIR ;
                                               PUSH nat 0 ;
                                               DUP 4 ;
                                               COMPARE ;
                                               GT ;
                                               IF { PUSH nat 1 ;
                                                    DIG 3 ;
                                                    SUB ;
                                                    ABS ;
                                                    DIG 2 ;
                                                    DUP 3 ;
                                                    CONS ;
                                                    DIG 2 ;
                                                    PAIR ;
                                                    PAIR ;
                                                    LEFT (list address) }
                                                  { DIG 2 ; DROP 2 ; RIGHT (pair (pair address (list address)) nat) } } ;
                                           SWAP ;
                                           NIL (pair nat address) ;
                                           PAIR ;
                                           SWAP ;
                                           ITER { SWAP ;
                                                  UNPAIR ;
                                                  PUSH nat 1 ;
                                                  DUP 3 ;
                                                  ADD ;
                                                  SWAP ;
                                                  DIG 3 ;
                                                  DIG 3 ;
                                                  PAIR ;
                                                  CONS ;
                                                  PAIR } ;
                                           CAR ;
                                           DUP 2 ;
                                           CAR ;
                                           CAR ;
                                           CDR ;
                                           NIL (pair (option address) nat nat) ;
                                           PAIR ;
                                           SWAP ;
                                           ITER { SWAP ;
                                                  DUP 2 ;
                                                  CAR ;
                                                  DUP 2 ;
                                                  CDR ;
                                                  CAR ;
                                                  CAR ;
                                                  DUP 2 ;
                                                  MEM ;
                                                  IF { DROP 3 ; PUSH string "FA2_INVALID_TOKEN_ID" ; FAILWITH }
                                                     { DUP 2 ;
                                                       CDR ;
                                                       DIG 2 ;
                                                       CAR ;
                                                       PUSH nat 1 ;
                                                       DIG 3 ;
                                                       DIG 4 ;
                                                       CDR ;
                                                       SOME ;
                                                       PAIR 3 ;
                                                       CONS ;
                                                       PAIR } } ;
                                           DUP ;
                                           CDR ;
                                           LAMBDA
                                             (pair (pair address address) nat (big_map (pair address address nat) unit))
                                             unit
                                             { DROP ; UNIT } ;
                                           NIL (pair (option address) (list (pair (option address) nat nat))) ;
                                           DIG 3 ;
                                           CAR ;
                                           NONE address ;
                                           PAIR ;
                                           CONS ;
                                           PAIR ;
                                           PAIR ;
                                           DUP 3 ;
                                           SWAP ;
                                           EXEC ;
                                           CDR ;
                                           DUP 2 ;
                                           CDR ;
                                           DUP 3 ;
                                           CAR ;
                                           CDR ;
                                           DIG 2 ;
                                           DIG 3 ;
                                           CAR ;
                                           CAR ;
                                           CAR ;
                                           PAIR ;
                                           PAIR ;
                                           PAIR } ;
                                    SWAP ;
                                    DROP }
                                  { DIG 4 ;
                                    DROP ;
                                    DUP 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DIG 4 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    DUP 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DIG 3 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    DUP 2 ;
                                    CDR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    DUP 4 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    DIG 3 ;
                                    DIG 4 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR } ;
                                NIL operation } }
                          { DIG 2 ;
                            DIG 4 ;
                            DROP 2 ;
                            DUP 2 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            DIG 3 ;
                            SWAP ;
                            EXEC ;
                            DROP ;
                            DUP 2 ;
                            CDR ;
                            CAR ;
                            PUSH string "" ;
                            GET ;
                            IF_NONE
                              { DUP 2 ;
                                CDR ;
                                CDR ;
                                DUP 3 ;
                                CDR ;
                                CAR ;
                                DIG 2 ;
                                SOME ;
                                PUSH string "" ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                CAR }
                              { DROP ;
                                DUP 2 ;
                                CDR ;
                                CDR ;
                                DUP 3 ;
                                CDR ;
                                CAR ;
                                DIG 2 ;
                                SOME ;
                                PUSH string "" ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                CAR } ;
                            PAIR ;
                            NIL operation } ;
                        PAIR } ;
                 view "minter" nat address { CDR ; CAR ; CAR ; CAR ; CAR } ;
                 view "is_token_minter"
                      (pair address nat)
                      bool
                      { UNPAIR ;
                        DUP 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        DUP 2 ;
                        CDR ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        DUP 3 ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { DROP 2 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DROP ;
                            CAR ;
                            SWAP ;
                            CAR ;
                            CAR ;
                            CAR ;
                            CAR ;
                            COMPARE ;
                            EQ ;
                            IF { PUSH bool True } { PUSH bool False } } } ;
                 view "royalty_distribution"
                      nat
                      (pair address (nat %royalty) (list %splits (pair (address %address) (nat %pct))))
                      { UNPAIR ;
                        DUP 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        DUP 2 ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DUP ; GET 6 ; SWAP ; GET 5 ; PAIR ; SWAP ; CAR ; CAR ; CAR ; CAR ; PAIR } } ;
                 view "royalty"
                      nat
                      nat
                      { UNPAIR ;
                        DUP 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { GET 5 } } ;
                 view "royalty_splits"
                      nat
                      (pair (nat %royalty) (list %splits (pair (address %address) (nat %pct))))
                      { UNPAIR ;
                        DUP 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DUP ; GET 6 ; SWAP ; GET 5 ; PAIR } } ;
                 view "splits"
                      nat
                      (list (pair (address %address) (nat %pct)))
                      { UNPAIR ;
                        DUP 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { GET 6 } } ;
                 view "token_metadata"
                      nat
                      (pair (nat %token_id) (map %token_info string bytes))
                      { UNPAIR ;
                        DUP 2 ;
                        CAR ;
                        CAR ;
                        CDR ;
                        CAR ;
                        CAR ;
                        DUP 2 ;
                        GET ;
                        IF_NONE
                          { DROP 2 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DROP ;
                            DUP 2 ;
                            CAR ;
                            CDR ;
                            CDR ;
                            DUP 2 ;
                            EDIV ;
                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                            CAR ;
                            DUP 3 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            DUP 2 ;
                            GET ;
                            IF_NONE
                              { DROP 3 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                              { CAR ;
                                PUSH nat 1 ;
                                DIG 4 ;
                                CAR ;
                                CDR ;
                                CDR ;
                                DIG 3 ;
                                MUL ;
                                DUP 4 ;
                                SUB ;
                                ADD ;
                                PACK ;
                                PUSH string "edition_number" ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                SWAP ;
                                PAIR } } } ;
                 view "is_unique_edition"
                      nat
                      bool
                      { UNPAIR ;
                        DUP 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { PUSH nat 1 ;
                            SWAP ;
                            GET 3 ;
                            COMPARE ;
                            GT ;
                            IF { PUSH bool False } { PUSH bool True } } } } ;
             PAIR ;
             SENDER ;
             DUP 2 ;
             CDR ;
             PAIR ;
             DUP 3 ;
             CDR ;
             SWAP ;
             DUP 4 ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             DUP 3 ;
             CAR ;
             PAIR ;
             DUP ;
             CDR ;
             DUP 2 ;
             CAR ;
             CDR ;
             CDR ;
             PUSH nat 1 ;
             DIG 5 ;
             CAR ;
             CDR ;
             CAR ;
             ADD ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             DIG 2 ;
             CAR ;
             CONS }
           { DUP 2 ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} ;
             DUP 2 ;
             CDR ;
             SWAP ;
             DUP 3 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             NIL operation } ;
         PAIR } }

