{ parameter (or (bytes %create_gallery) (address %update_permission_manager)) ;
  storage
    (pair (pair (big_map %galleries address address) (big_map %metadata string bytes))
          (address %permission_manager)) ;
  code { UNPAIR ;
         PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { FAILWITH } { DROP } ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SENDER ;
             VIEW "is_gallery" bool ;
             IF_NONE
               { PUSH string "NOT_A_GALLERY" ; FAILWITH }
               { IF {} { PUSH string "NOT_A_GALLERY" ; FAILWITH } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             SENDER ;
             MEM ;
             IF { PUSH string "ALREADY_ORIGINATED" ; FAILWITH } {} ;
             EMPTY_BIG_MAP
               nat
               (pair address
                     (map string bytes)
                     nat
                     nat
                     (pair bool bytes)
                     (list (pair address nat))
                     nat
                     (list (pair address nat))) ;
             EMPTY_BIG_MAP nat (pair nat (map string bytes)) ;
             EMPTY_BIG_MAP (pair address (pair address nat)) unit ;
             EMPTY_BIG_MAP nat address ;
             PAIR ;
             PAIR ;
             EMPTY_BIG_MAP address unit ;
             EMPTY_BIG_MAP address unit ;
             EMPTY_MAP address unit ;
             UNIT ;
             SENDER ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             PAIR ;
             PUSH nat 0 ;
             DUP 4 ;
             EMPTY_BIG_MAP string bytes ;
             DIG 6 ;
             SOME ;
             PUSH string "" ;
             UPDATE ;
             PAIR ;
             PAIR ;
             PUSH nat 50 ;
             DIG 4 ;
             PAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             PAIR ;
             PUSH mutez 0 ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter
                   (or (or (or (or (bool %accept_minter_invitation)
                                   (or %admin
                                      (or (address %add_admin) (address %remove_admin))
                                      (or (address %remove_minter) (address %send_minter_invitation))))
                               (or (pair %burn_token (address %owner) (nat %token_id))
                                   (list %create_proposals
                                      (pair (address %minter)
                                            (bytes %edition_info)
                                            (nat %total_edition_number)
                                            (pair %license (bool %upgradeable) (bytes %hash))
                                            (nat %royalty)
                                            (list %splits (pair (address %address) (nat %pct)))
                                            (nat %gallery_commission)
                                            (list %gallery_commission_splits (pair (address %address) (nat %pct)))))))
                           (or (or (or %fA2
                                      (or (pair %balance_of
                                             (list %requests (pair (address %owner) (nat %token_id)))
                                             (contract %callback
                                                (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                                          (list %transfer
                                             (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
                                      (list %update_operators
                                         (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                             (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))
                                   (list %mint_editions nat))
                               (or (list %reject_proposals nat) (unit %remove_minter_self))))
                       (or (or (list %remove_proposals nat) (bytes %update_metadata))
                           (or (pair %update_proposal
                                  (nat %proposal_id)
                                  (address %minter)
                                  (bytes %edition_info)
                                  (pair %license (bool %upgradeable) (bytes %hash))
                                  (nat %total_edition_number)
                                  (nat %royalty)
                                  (list %splits (pair (address %address) (nat %pct)))
                                  (nat %gallery_commission)
                                  (list %gallery_commission_splits (pair (address %address) (nat %pct))))
                               (pair %upgrade_license
                                  (nat %edition_id)
                                  (pair %license (bool %upgradeable) (bytes %hash)))))) ;
                 storage
                   (pair (pair (pair (pair %admin
                                        (pair (map %admins address unit) (big_map %minters address unit))
                                        (big_map %pending_minters address unit))
                                     (pair %assets
                                        (pair (big_map %ledger nat address)
                                              (big_map %operators (pair address (pair address nat)) unit))
                                        (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                               (pair (big_map %editions_metadata
                                        nat
                                        (pair (address %minter)
                                              (map %edition_info string bytes)
                                              (nat %total_edition_number)
                                              (nat %royalty)
                                              (pair %license (bool %upgradeable) (bytes %hash))
                                              (list %splits (pair (address %address) (nat %pct)))
                                              (nat %gallery_commission)
                                              (list %gallery_commission_splits (pair (address %address) (nat %pct)))))
                                     (nat %max_editions_per_run)))
                         (pair (pair (big_map %metadata string bytes)
                                     (big_map %mint_proposals
                                        nat
                                        (pair (address %minter)
                                              (map %edition_info string bytes)
                                              (nat %total_edition_number)
                                              (nat %royalty)
                                              (pair %license (bool %upgradeable) (bytes %hash))
                                              (list %splits (pair (address %address) (nat %pct)))
                                              (nat %gallery_commission)
                                              (list %gallery_commission_splits (pair (address %address) (nat %pct))))))
                               (nat %next_edition_id))) ;
                 code { LAMBDA
                          (pair (pair (list (pair (option address) (list (pair (option address) nat nat))))
                                      (lambda
                                         (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                                         unit))
                                (pair (pair (big_map nat address) (big_map (pair address (pair address nat)) unit))
                                      (big_map nat (pair nat (map string bytes)))))
                          (pair (list operation)
                                (pair (pair (big_map nat address) (big_map (pair address (pair address nat)) unit))
                                      (big_map nat (pair nat (map string bytes)))))
                          { UNPAIR ;
                            UNPAIR ;
                            DUP 3 ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            ITER { DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   ITER { SWAP ;
                                          DUP 3 ;
                                          CAR ;
                                          IF_NONE
                                            { UNIT }
                                            { DUP 6 ;
                                              CAR ;
                                              CDR ;
                                              DUP 4 ;
                                              GET 3 ;
                                              PAIR ;
                                              SENDER ;
                                              DIG 2 ;
                                              PAIR ;
                                              PAIR ;
                                              DUP 5 ;
                                              SWAP ;
                                              EXEC } ;
                                          DROP ;
                                          PUSH nat 1 ;
                                          DUP 3 ;
                                          GET 4 ;
                                          COMPARE ;
                                          GT ;
                                          IF { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                                             { PUSH nat 0 ;
                                               DUP 3 ;
                                               GET 4 ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DUP ;
                                                    DIG 2 ;
                                                    GET 3 ;
                                                    GET ;
                                                    IF_NONE { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { DROP } }
                                                  { SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    GET 3 ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    IF_NONE
                                                      { DROP }
                                                      { DUP 3 ;
                                                        DUP 3 ;
                                                        GET ;
                                                        IF_NONE
                                                          { DROP 3 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                          { COMPARE ;
                                                            EQ ;
                                                            IF { NONE address ; SWAP ; UPDATE }
                                                               { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } } } ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    CAR ;
                                                    IF_NONE { SWAP ; DROP } { DIG 2 ; GET 3 ; SWAP ; SOME ; SWAP ; UPDATE } } } } ;
                                   SWAP ;
                                   DROP } ;
                            SWAP ;
                            DROP ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DIG 2 ;
                            CAR ;
                            CDR ;
                            DIG 2 ;
                            PAIR ;
                            PAIR ;
                            NIL operation ;
                            PAIR } ;
                        LAMBDA
                          (pair (pair (map address unit) (big_map address unit)) (big_map address unit))
                          unit
                          { CAR ;
                            CAR ;
                            SENDER ;
                            MEM ;
                            IF { UNIT } { PUSH string "NOT_AN_ADMIN" ; FAILWITH } } ;
                        LAMBDA
                          (pair address
                                (pair (pair (map address unit) (big_map address unit)) (big_map address unit)))
                          unit
                          { UNPAIR ;
                            SWAP ;
                            CAR ;
                            CDR ;
                            SWAP ;
                            GET ;
                            IF_NONE { PUSH string "NOT_A_MINTER" ; FAILWITH } { DROP ; UNIT } } ;
                        LAMBDA (pair nat (pair address nat)) nat { UNPAIR ; SWAP ; CDR ; ADD } ;
                        DIG 4 ;
                        UNPAIR ;
                        PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                        PUSH mutez 0 ;
                        AMOUNT ;
                        COMPARE ;
                        EQ ;
                        NOT ;
                        IF { FAILWITH } { DROP } ;
                        IF_LEFT
                          { IF_LEFT
                              { DIG 5 ;
                                DROP ;
                                IF_LEFT
                                  { DIG 2 ;
                                    DIG 3 ;
                                    DROP 2 ;
                                    IF_LEFT
                                      { DIG 2 ;
                                        DROP ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        SENDER ;
                                        MEM ;
                                        IF {} { PUSH string "NOT_PENDING_MINTER" ; FAILWITH } ;
                                        PUSH bool True ;
                                        SWAP ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DUP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             DUP ;
                                             CDR ;
                                             DUP 6 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             UNIT ;
                                             SENDER ;
                                             PAIR 3 ;
                                             UNPAIR 3 ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             DIG 2 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             DUP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             DIG 2 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             CDR ;
                                             DUP 5 ;
                                             CAR ;
                                             CDR ;
                                             DUP 6 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DUP 7 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             DUP ;
                                             CDR ;
                                             DUP 9 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             UNIT ;
                                             SENDER ;
                                             PAIR 3 ;
                                             UNPAIR 3 ;
                                             SWAP ;
                                             SOME ;
                                             SWAP ;
                                             UPDATE ;
                                             DIG 2 ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             DIG 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             SENDER ;
                                             NONE unit ;
                                             SWAP ;
                                             UPDATE ;
                                             SWAP ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             NIL operation ;
                                             PAIR }
                                           { DUP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             SENDER ;
                                             NONE unit ;
                                             SWAP ;
                                             UPDATE ;
                                             DIG 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             NIL operation ;
                                             PAIR } }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        DUP ;
                                        DIG 4 ;
                                        SWAP ;
                                        EXEC ;
                                        DROP ;
                                        SWAP ;
                                        IF_LEFT
                                          { IF_LEFT
                                              { SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                CAR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                MEM ;
                                                IF { DROP 2 ; PUSH string "ALREADY_ADMIN" ; FAILWITH }
                                                   { SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CDR ;
                                                     DUP 3 ;
                                                     CAR ;
                                                     CDR ;
                                                     DIG 3 ;
                                                     CAR ;
                                                     CAR ;
                                                     UNIT ;
                                                     DIG 4 ;
                                                     SWAP ;
                                                     SOME ;
                                                     SWAP ;
                                                     UPDATE ;
                                                     PAIR ;
                                                     PAIR ;
                                                     NIL operation ;
                                                     PAIR } }
                                              { PUSH nat 1 ;
                                                DUP 3 ;
                                                CAR ;
                                                CAR ;
                                                SIZE ;
                                                COMPARE ;
                                                GT ;
                                                IF { SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CDR ;
                                                     DUP 3 ;
                                                     CAR ;
                                                     CDR ;
                                                     DIG 3 ;
                                                     CAR ;
                                                     CAR ;
                                                     DIG 3 ;
                                                     NONE unit ;
                                                     SWAP ;
                                                     UPDATE ;
                                                     PAIR ;
                                                     PAIR ;
                                                     NIL operation ;
                                                     PAIR }
                                                   { DROP 2 ; PUSH string "MINIMUM_1_ADMIN" ; FAILWITH } } }
                                          { IF_LEFT
                                              { SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                NONE unit ;
                                                SWAP ;
                                                UPDATE ;
                                                DUP 3 ;
                                                CAR ;
                                                PAIR ;
                                                DUP ;
                                                CDR ;
                                                DIG 3 ;
                                                CAR ;
                                                CDR ;
                                                DIG 3 ;
                                                NONE unit ;
                                                SWAP ;
                                                UPDATE ;
                                                DIG 2 ;
                                                CAR ;
                                                CAR ;
                                                PAIR ;
                                                PAIR ;
                                                NIL operation ;
                                                PAIR }
                                              { SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                MEM ;
                                                IF { DROP 2 ; PUSH string "INVITATION_ALREADY_SENT" ; FAILWITH }
                                                   { SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CAR ;
                                                     CDR ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     MEM ;
                                                     IF { DROP 2 ; PUSH string "ALREADY_MINTER" ; FAILWITH }
                                                        { SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          CDR ;
                                                          UNIT ;
                                                          DIG 2 ;
                                                          SWAP ;
                                                          SOME ;
                                                          SWAP ;
                                                          UPDATE ;
                                                          SWAP ;
                                                          CAR ;
                                                          PAIR ;
                                                          NIL operation ;
                                                          PAIR } } } } ;
                                        UNPAIR ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 4 ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR } }
                                  { IF_LEFT
                                      { DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        DROP 3 ;
                                        PUSH string "NOT_OWNER" ;
                                        SENDER ;
                                        DUP 3 ;
                                        CAR ;
                                        COMPARE ;
                                        EQ ;
                                        NOT ;
                                        IF { FAILWITH } { DROP } ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        SENDER ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        DIG 2 ;
                                        GET ;
                                        IF_NONE
                                          { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                          { COMPARE ;
                                            EQ ;
                                            IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } } ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        UNPAIR ;
                                        CDR ;
                                        DUP 6 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        DIG 5 ;
                                        CDR ;
                                        NONE address ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        DIG 5 ;
                                        SWAP ;
                                        EXEC ;
                                        DROP ;
                                        ITER { SWAP ;
                                               PUSH nat 250 ;
                                               DUP 3 ;
                                               GET 9 ;
                                               COMPARE ;
                                               LE ;
                                               NOT ;
                                               IF { PUSH string "ROYALTIES_CANNOT_EXCEED_25_PERCENT" ; FAILWITH } {} ;
                                               PUSH nat 500 ;
                                               DUP 3 ;
                                               GET 13 ;
                                               COMPARE ;
                                               LE ;
                                               NOT ;
                                               IF { PUSH string "COMMISSIONS_CANNOT_EXCEED_50_PERCENT" ; FAILWITH } {} ;
                                               PUSH nat 50 ;
                                               DUP 3 ;
                                               GET 9 ;
                                               COMPARE ;
                                               GE ;
                                               NOT ;
                                               IF { PUSH string "ROYALTIES_MINIMUM_5_PERCENT" ; FAILWITH } {} ;
                                               PUSH nat 1 ;
                                               DUP 3 ;
                                               GET 5 ;
                                               COMPARE ;
                                               GE ;
                                               NOT ;
                                               IF { PUSH string "EDITION_NUMBER_SHOULD_BE_AT_LEAST_ONE" ; FAILWITH } {} ;
                                               DUP ;
                                               CAR ;
                                               CDR ;
                                               CDR ;
                                               DUP 3 ;
                                               GET 5 ;
                                               COMPARE ;
                                               LE ;
                                               NOT ;
                                               IF { PUSH string "EDITION_RUN_TOO_LARGE" ; FAILWITH } {} ;
                                               DUP ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               DUP 3 ;
                                               CAR ;
                                               PAIR ;
                                               DUP 5 ;
                                               SWAP ;
                                               EXEC ;
                                               DROP ;
                                               PUSH nat 0 ;
                                               DUP 3 ;
                                               GET 11 ;
                                               ITER { SWAP ; PAIR ; DUP 4 ; SWAP ; EXEC } ;
                                               PUSH nat 1000 ;
                                               SWAP ;
                                               COMPARE ;
                                               EQ ;
                                               NOT ;
                                               IF { PUSH string "TOTAL_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH } {} ;
                                               PUSH nat 0 ;
                                               DUP 3 ;
                                               GET 14 ;
                                               ITER { SWAP ; PAIR ; DUP 4 ; SWAP ; EXEC } ;
                                               PUSH nat 1000 ;
                                               SWAP ;
                                               COMPARE ;
                                               EQ ;
                                               NOT ;
                                               IF { PUSH string "TOTAL_COMMISSION_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH }
                                                  {} ;
                                               PUSH nat 1 ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               CDR ;
                                               CDR ;
                                               ADD ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               CDR ;
                                               CAR ;
                                               PAIR ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               CAR ;
                                               PAIR ;
                                               DUP ;
                                               CDR ;
                                               CDR ;
                                               DUP 3 ;
                                               CDR ;
                                               CAR ;
                                               CDR ;
                                               DUP 5 ;
                                               GET 14 ;
                                               DUP 6 ;
                                               GET 13 ;
                                               DUP 7 ;
                                               GET 11 ;
                                               DUP 8 ;
                                               GET 7 ;
                                               DUP 9 ;
                                               GET 9 ;
                                               DUP 10 ;
                                               GET 5 ;
                                               EMPTY_MAP string bytes ;
                                               DUP 12 ;
                                               GET 3 ;
                                               SOME ;
                                               PUSH string "" ;
                                               UPDATE ;
                                               DIG 11 ;
                                               CAR ;
                                               PAIR 8 ;
                                               DIG 4 ;
                                               CDR ;
                                               CDR ;
                                               SWAP ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               DUP 3 ;
                                               CDR ;
                                               CAR ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               SWAP ;
                                               CAR ;
                                               PAIR } ;
                                        SWAP ;
                                        DIG 2 ;
                                        DROP 2 ;
                                        NIL operation ;
                                        PAIR } } }
                              { DIG 2 ;
                                DIG 4 ;
                                DROP 2 ;
                                IF_LEFT
                                  { DIG 2 ;
                                    DROP ;
                                    IF_LEFT
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        IF_LEFT
                                          { IF_LEFT
                                              { DIG 3 ;
                                                DROP ;
                                                DUP ;
                                                CAR ;
                                                MAP { DUP 3 ;
                                                      CAR ;
                                                      CAR ;
                                                      SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      CDR ;
                                                      GET ;
                                                      IF_NONE
                                                        { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                        { SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          CAR ;
                                                          SWAP ;
                                                          COMPARE ;
                                                          EQ ;
                                                          IF { PUSH nat 1 } { PUSH nat 0 } ;
                                                          SWAP ;
                                                          PAIR } } ;
                                                SWAP ;
                                                CDR ;
                                                PUSH mutez 0 ;
                                                DIG 2 ;
                                                TRANSFER_TOKENS ;
                                                SWAP ;
                                                NIL operation ;
                                                DIG 2 ;
                                                CONS ;
                                                PAIR }
                                              { MAP { DUP ;
                                                      CDR ;
                                                      MAP { DUP ; GET 4 ; SWAP ; DUP ; DUG 2 ; GET 3 ; DIG 2 ; CAR ; SOME ; PAIR 3 } ;
                                                      SWAP ;
                                                      CAR ;
                                                      SOME ;
                                                      PAIR } ;
                                                SWAP ;
                                                LAMBDA
                                                  (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                                                  unit
                                                  { UNPAIR ;
                                                    UNPAIR ;
                                                    DIG 2 ;
                                                    UNPAIR ;
                                                    DUP 4 ;
                                                    DUP 4 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF { DROP 4 ; UNIT }
                                                       { DIG 3 ;
                                                         PAIR ;
                                                         DIG 2 ;
                                                         PAIR ;
                                                         MEM ;
                                                         IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                                                DIG 2 ;
                                                PAIR ;
                                                PAIR ;
                                                DIG 2 ;
                                                SWAP ;
                                                EXEC } }
                                          { DIG 3 ;
                                            DROP ;
                                            SENDER ;
                                            DUP 3 ;
                                            CAR ;
                                            CDR ;
                                            DIG 2 ;
                                            ITER { SWAP ;
                                                   DUP 3 ;
                                                   DUP 3 ;
                                                   IF_LEFT {} {} ;
                                                   CAR ;
                                                   COMPARE ;
                                                   EQ ;
                                                   IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                                   SWAP ;
                                                   IF_LEFT
                                                     { SWAP ;
                                                       UNIT ;
                                                       SOME ;
                                                       DUP 3 ;
                                                       GET 4 ;
                                                       DUP 4 ;
                                                       GET 3 ;
                                                       PAIR ;
                                                       DIG 3 ;
                                                       CAR ;
                                                       PAIR ;
                                                       UPDATE }
                                                     { DUP ;
                                                       DUG 2 ;
                                                       GET 4 ;
                                                       DUP 3 ;
                                                       GET 3 ;
                                                       PAIR ;
                                                       DIG 2 ;
                                                       CAR ;
                                                       PAIR ;
                                                       NONE unit ;
                                                       SWAP ;
                                                       UPDATE } } ;
                                            SWAP ;
                                            DROP ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            SWAP ;
                                            DIG 2 ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            NIL operation ;
                                            PAIR } ;
                                        UNPAIR ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR }
                                      { ITER { SWAP ;
                                               DUP ;
                                               CDR ;
                                               CAR ;
                                               CDR ;
                                               DUP 3 ;
                                               GET ;
                                               IF_NONE
                                                 { DROP 2 ; PUSH string "FA2_PROPOSAL_UNDEFINED" ; FAILWITH }
                                                 { PUSH string "SENDER_MUST_BE_MINTER" ;
                                                   SENDER ;
                                                   DUP 3 ;
                                                   CAR ;
                                                   COMPARE ;
                                                   EQ ;
                                                   NOT ;
                                                   IF { FAILWITH } { DROP } ;
                                                   SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CDR ;
                                                   DUP 3 ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   DUP 4 ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   DUP 4 ;
                                                   DUP 7 ;
                                                   SWAP ;
                                                   SOME ;
                                                   SWAP ;
                                                   UPDATE ;
                                                   PAIR ;
                                                   DUP 4 ;
                                                   CAR ;
                                                   CAR ;
                                                   PAIR ;
                                                   PAIR ;
                                                   DUP ;
                                                   CDR ;
                                                   CDR ;
                                                   DIG 3 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   DUP 5 ;
                                                   NONE (pair address
                                                              (map string bytes)
                                                              nat
                                                              nat
                                                              (pair bool bytes)
                                                              (list (pair address nat))
                                                              nat
                                                              (list (pair address nat))) ;
                                                   SWAP ;
                                                   UPDATE ;
                                                   DUP 3 ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   PAIR ;
                                                   PAIR ;
                                                   SWAP ;
                                                   CAR ;
                                                   PAIR ;
                                                   SWAP ;
                                                   PAIR ;
                                                   SENDER ;
                                                   DUG 2 ;
                                                   UNPAIR ;
                                                   SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CAR ;
                                                   CDR ;
                                                   CDR ;
                                                   DIG 3 ;
                                                   MUL ;
                                                   SWAP ;
                                                   GET 5 ;
                                                   NIL address ;
                                                   DIG 4 ;
                                                   PAIR ;
                                                   PAIR ;
                                                   LEFT (list address) ;
                                                   LOOP_LEFT
                                                     { UNPAIR ;
                                                       UNPAIR ;
                                                       PUSH nat 0 ;
                                                       DUP 4 ;
                                                       COMPARE ;
                                                       GT ;
                                                       IF { PUSH nat 1 ;
                                                            DIG 3 ;
                                                            SUB ;
                                                            ABS ;
                                                            DUG 2 ;
                                                            DUP ;
                                                            DUG 3 ;
                                                            CONS ;
                                                            DIG 2 ;
                                                            PAIR ;
                                                            PAIR ;
                                                            LEFT (list address) }
                                                          { DIG 2 ; DROP 2 ; RIGHT (pair (pair address (list address)) nat) } } ;
                                                   SWAP ;
                                                   NIL (pair nat address) ;
                                                   PAIR ;
                                                   SWAP ;
                                                   ITER { SWAP ;
                                                          UNPAIR ;
                                                          PUSH nat 1 ;
                                                          DUP 3 ;
                                                          ADD ;
                                                          SWAP ;
                                                          DIG 3 ;
                                                          DIG 3 ;
                                                          PAIR ;
                                                          CONS ;
                                                          PAIR } ;
                                                   CAR ;
                                                   SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CAR ;
                                                   CAR ;
                                                   CDR ;
                                                   NIL (pair (option address) nat nat) ;
                                                   PAIR ;
                                                   SWAP ;
                                                   ITER { DUP ;
                                                          DUG 2 ;
                                                          CAR ;
                                                          SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          CDR ;
                                                          CAR ;
                                                          CAR ;
                                                          SWAP ;
                                                          DUP ;
                                                          DUG 2 ;
                                                          MEM ;
                                                          IF { DROP 3 ; PUSH string "FA2_INVALID_TOKEN_ID" ; FAILWITH }
                                                             { SWAP ;
                                                               DUP ;
                                                               DUG 2 ;
                                                               CDR ;
                                                               DIG 2 ;
                                                               CAR ;
                                                               PUSH nat 1 ;
                                                               DIG 3 ;
                                                               DIG 4 ;
                                                               CDR ;
                                                               SOME ;
                                                               PAIR 3 ;
                                                               CONS ;
                                                               PAIR } } ;
                                                   DUP ;
                                                   CDR ;
                                                   LAMBDA
                                                     (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                                                     unit
                                                     { DROP ; UNIT } ;
                                                   NIL (pair (option address) (list (pair (option address) nat nat))) ;
                                                   DIG 3 ;
                                                   CAR ;
                                                   NONE address ;
                                                   PAIR ;
                                                   CONS ;
                                                   PAIR ;
                                                   PAIR ;
                                                   DUP 3 ;
                                                   SWAP ;
                                                   EXEC ;
                                                   CDR ;
                                                   SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CDR ;
                                                   DUP 3 ;
                                                   CAR ;
                                                   CDR ;
                                                   DIG 2 ;
                                                   DIG 3 ;
                                                   CAR ;
                                                   CAR ;
                                                   CAR ;
                                                   PAIR ;
                                                   PAIR ;
                                                   PAIR } } ;
                                        SWAP ;
                                        DROP ;
                                        NIL operation ;
                                        PAIR } }
                                  { DIG 3 ;
                                    DROP ;
                                    IF_LEFT
                                      { DIG 2 ;
                                        DROP ;
                                        ITER { SWAP ;
                                               DUP ;
                                               CDR ;
                                               CAR ;
                                               CDR ;
                                               DUP 3 ;
                                               GET ;
                                               IF_NONE
                                                 { DROP 2 ; PUSH string "FA2_PROPOSAL_UNDEFINED" ; FAILWITH }
                                                 { PUSH string "SENDER_MUST_BE_MINTER" ;
                                                   SENDER ;
                                                   DIG 2 ;
                                                   CAR ;
                                                   COMPARE ;
                                                   EQ ;
                                                   NOT ;
                                                   IF { FAILWITH } { DROP } ;
                                                   DUP ;
                                                   CDR ;
                                                   CDR ;
                                                   SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   DIG 3 ;
                                                   NONE (pair address
                                                              (map string bytes)
                                                              nat
                                                              nat
                                                              (pair bool bytes)
                                                              (list (pair address nat))
                                                              nat
                                                              (list (pair address nat))) ;
                                                   SWAP ;
                                                   UPDATE ;
                                                   DUP 3 ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   PAIR ;
                                                   PAIR ;
                                                   SWAP ;
                                                   CAR ;
                                                   PAIR } } ;
                                        NIL operation ;
                                        PAIR }
                                      { DROP ;
                                        DUP ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        PAIR ;
                                        DIG 2 ;
                                        SWAP ;
                                        EXEC ;
                                        DROP ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        DUP ;
                                        CDR ;
                                        DIG 5 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        SENDER ;
                                        NONE unit ;
                                        SWAP ;
                                        UPDATE ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } } } }
                          { DIG 5 ;
                            DROP ;
                            IF_LEFT
                              { DIG 2 ;
                                DIG 3 ;
                                DROP 2 ;
                                IF_LEFT
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DIG 3 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    ITER { SWAP ;
                                           DUP ;
                                           CDR ;
                                           CDR ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CAR ;
                                           CDR ;
                                           DIG 3 ;
                                           NONE (pair address
                                                      (map string bytes)
                                                      nat
                                                      nat
                                                      (pair bool bytes)
                                                      (list (pair address nat))
                                                      nat
                                                      (list (pair address nat))) ;
                                           SWAP ;
                                           UPDATE ;
                                           DUP 3 ;
                                           CDR ;
                                           CAR ;
                                           CAR ;
                                           PAIR ;
                                           PAIR ;
                                           SWAP ;
                                           CAR ;
                                           PAIR } ;
                                    NIL operation ;
                                    PAIR }
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DIG 3 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    PUSH string "" ;
                                    GET ;
                                    IF_NONE
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        DIG 3 ;
                                        SOME ;
                                        PUSH string "" ;
                                        UPDATE ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR }
                                      { DROP ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        DIG 3 ;
                                        SOME ;
                                        PUSH string "" ;
                                        UPDATE ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } } }
                              { IF_LEFT
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DIG 5 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    PUSH nat 250 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 11 ;
                                    COMPARE ;
                                    LE ;
                                    NOT ;
                                    IF { PUSH string "ROYALTIES_CANNOT_EXCEED_25_PERCENT" ; FAILWITH } {} ;
                                    PUSH nat 500 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 15 ;
                                    COMPARE ;
                                    LE ;
                                    NOT ;
                                    IF { PUSH string "COMMISSIONS_CANNOT_EXCEED_50_PERCENT" ; FAILWITH } {} ;
                                    PUSH nat 50 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 11 ;
                                    COMPARE ;
                                    GE ;
                                    NOT ;
                                    IF { PUSH string "ROYALTIES_MINIMUM_5_PERCENT" ; FAILWITH } {} ;
                                    PUSH nat 1 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 9 ;
                                    COMPARE ;
                                    GE ;
                                    NOT ;
                                    IF { PUSH string "EDITION_NUMBER_SHOULD_BE_AT_LEAST_ONE" ; FAILWITH } {} ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 9 ;
                                    COMPARE ;
                                    LE ;
                                    NOT ;
                                    IF { PUSH string "EDITION_RUN_TOO_LARGE" ; FAILWITH } {} ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 3 ;
                                    PAIR ;
                                    DIG 4 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    PUSH nat 0 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 13 ;
                                    ITER { SWAP ; PAIR ; DUP 4 ; SWAP ; EXEC } ;
                                    PUSH nat 1000 ;
                                    SWAP ;
                                    COMPARE ;
                                    EQ ;
                                    NOT ;
                                    IF { PUSH string "TOTAL_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH } {} ;
                                    PUSH nat 0 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET 16 ;
                                    ITER { SWAP ; PAIR ; DUP 4 ; SWAP ; EXEC } ;
                                    DIG 3 ;
                                    DROP ;
                                    PUSH nat 1000 ;
                                    SWAP ;
                                    COMPARE ;
                                    EQ ;
                                    NOT ;
                                    IF { PUSH string "TOTAL_COMMISSION_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH }
                                       {} ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    GET ;
                                    IF_NONE
                                      { DROP 2 ; PUSH string "FA2_PROPOSAL_UNDEFINED" ; FAILWITH }
                                      { DROP ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DUP 3 ;
                                        GET 16 ;
                                        DUP 4 ;
                                        GET 15 ;
                                        DUP 5 ;
                                        GET 13 ;
                                        DUP 6 ;
                                        GET 7 ;
                                        DUP 7 ;
                                        GET 11 ;
                                        DUP 8 ;
                                        GET 9 ;
                                        EMPTY_MAP string bytes ;
                                        DUP 10 ;
                                        GET 5 ;
                                        SOME ;
                                        PUSH string "" ;
                                        UPDATE ;
                                        DUP 10 ;
                                        GET 3 ;
                                        PAIR 8 ;
                                        SOME ;
                                        DIG 3 ;
                                        CAR ;
                                        UPDATE ;
                                        DUP 3 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } }
                                  { DIG 2 ;
                                    DIG 3 ;
                                    DIG 4 ;
                                    DROP 3 ;
                                    DUP ;
                                    CAR ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    GET ;
                                    IF_NONE
                                      { DROP 3 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                      { PUSH string "SENDER_MUST_BE_MINTER" ;
                                        SENDER ;
                                        DUP 3 ;
                                        CAR ;
                                        COMPARE ;
                                        EQ ;
                                        NOT ;
                                        IF { FAILWITH } { DROP } ;
                                        DUP ;
                                        GET 9 ;
                                        CAR ;
                                        NOT ;
                                        IF { PUSH string "LICENSE_SEALED" ; FAILWITH } {} ;
                                        DUP 4 ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 6 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DIG 3 ;
                                        DIG 5 ;
                                        CDR ;
                                        UPDATE 9 ;
                                        SOME ;
                                        DIG 4 ;
                                        UPDATE ;
                                        PAIR ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } } } } } ;
                 view "token_metadata"
                      nat
                      (pair (nat %token_id) (map %token_info string bytes))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CAR ;
                        CDR ;
                        CAR ;
                        CAR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE
                          { DROP 2 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DROP ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CDR ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            EDIV ;
                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                            CAR ;
                            DUP 3 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE
                              { DROP 3 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                              { DUP ;
                                GET 3 ;
                                PUSH nat 1 ;
                                DIG 5 ;
                                CAR ;
                                CDR ;
                                CDR ;
                                DIG 4 ;
                                MUL ;
                                DUP 5 ;
                                SUB ;
                                ADD ;
                                PACK ;
                                PUSH string "edition_number" ;
                                PAIR 3 ;
                                UNPAIR 3 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                SWAP ;
                                GET 9 ;
                                CDR ;
                                PUSH string "license" ;
                                PAIR 3 ;
                                UNPAIR 3 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                SWAP ;
                                PAIR } } } ;
                 view "royalty_distribution"
                      nat
                      (pair address (pair (nat %royalty) (list %splits (pair (address %address) (nat %pct)))))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DUP ; GET 11 ; SWAP ; DUP ; DUG 2 ; GET 7 ; PAIR ; SWAP ; CAR ; PAIR } } ;
                 view "splits"
                      nat
                      (list (pair (address %address) (nat %pct)))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { GET 11 } } ;
                 view "royalty_splits"
                      nat
                      (pair (nat %royalty) (list %splits (pair (address %address) (nat %pct))))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DUP ; GET 11 ; SWAP ; GET 7 ; PAIR } } ;
                 view "royalty"
                      nat
                      nat
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { GET 7 } } ;
                 view "minter"
                      nat
                      address
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { CAR } } ;
                 view "is_token_minter"
                      (pair address nat)
                      bool
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CDR ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        DIG 2 ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { SWAP ;
                            CAR ;
                            SWAP ;
                            CAR ;
                            COMPARE ;
                            EQ ;
                            IF { PUSH bool True } { PUSH bool False } } } ;
                 view "is_unique_edition"
                      nat
                      bool
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { PUSH nat 1 ;
                            SWAP ;
                            GET 5 ;
                            COMPARE ;
                            GT ;
                            IF { PUSH bool False } { PUSH bool True } } } ;
                 view "commission_splits"
                      nat
                      (pair (nat %commission_pct) (list %splits (pair (address %address) (nat %pct))))
                      { UNPAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        SWAP ;
                        EDIV ;
                        IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                        CAR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        GET ;
                        IF_NONE
                          { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                          { DUP ; GET 14 ; SWAP ; GET 13 ; PAIR } } } ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             DIG 3 ;
             CAR ;
             CAR ;
             DUP 4 ;
             CDR ;
             SENDER ;
             PAIR 3 ;
             UNPAIR 3 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             PAIR ;
             NIL operation ;
             DIG 2 ;
             CAR ;
             CONS ;
             PAIR }
           { SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SENDER ;
             VIEW "is_admin" bool ;
             IF_NONE
               { PUSH string "NOT_AN_ADMIN" ; FAILWITH }
               { IF {} { PUSH string "NOT_AN_ADMIN" ; FAILWITH } } ;
             SWAP ;
             CAR ;
             PAIR ;
             NIL operation ;
             PAIR } } }

