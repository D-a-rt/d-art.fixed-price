{ parameter
    (or (or (or (or (or %admin
                       (or (list %accept_proposals nat) (bool %pause_minting))
                       (or (list %reject_proposals nat) (address %update_permission_manager)))
                    (nat %burn_token))
                (or (pair %create_proposal
                       (bytes %edition_info)
                       (pair %license (bool %upgradeable) (bytes %hash))
                       (nat %royalty)
                       (list %splits (pair (address %address) (nat %pct))))
                    (or %fA2
                       (or (pair %balance_of
                              (list %requests (pair (address %owner) (nat %token_id)))
                              (contract %callback
                                 (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                           (list %transfer
                              (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
                       (list %update_operators
                          (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                              (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))))
            (or (or (nat %mint_editions) (nat %remove_proposal))
                (or (bytes %update_metadata)
                    (pair %update_proposal
                       (nat %proposal_id)
                       (bytes %edition_info)
                       (pair %license (bool %upgradeable) (bytes %hash))
                       (nat %royalty)
                       (list %splits (pair (address %address) (nat %pct)))))))
        (pair %upgrade_license
           (nat %edition_id)
           (pair %license (bool %upgradeable) (bytes %hash)))) ;
  storage
    (pair (pair (pair (pair %admin (bool %paused_minting) (address %permission_manager))
                      (big_map %as_minted address unit))
                (pair (pair %assets
                         (pair (big_map %ledger nat address)
                               (big_map %operators (pair address (pair address nat)) unit))
                         (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
                      (big_map %editions_metadata
                         nat
                         (pair (address %minter)
                               (map %edition_info string bytes)
                               (nat %total_edition_number)
                               (pair %license (bool %upgradeable) (bytes %hash))
                               (nat %royalty)
                               (list %splits (pair (address %address) (nat %pct)))))))
          (pair (pair (nat %max_editions_per_run) (big_map %metadata string bytes))
                (pair (nat %next_token_id)
                      (big_map %proposals
                         nat
                         (pair (bool %accepted)
                               (address %minter)
                               (map %edition_info string bytes)
                               (pair %license (bool %upgradeable) (bytes %hash))
                               (nat %total_edition_number)
                               (nat %royalty)
                               (list %splits (pair (address %address) (nat %pct)))))))) ;
  code { LAMBDA
           (pair (pair (list (pair (option address) (list (pair (option address) nat nat))))
                       (lambda
                          (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                          unit))
                 (pair (pair (big_map nat address) (big_map (pair address (pair address nat)) unit))
                       (big_map nat (pair nat (map string bytes)))))
           (pair (list operation)
                 (pair (pair (big_map nat address) (big_map (pair address (pair address nat)) unit))
                       (big_map nat (pair nat (map string bytes)))))
           { UNPAIR ;
             UNPAIR ;
             DUP 3 ;
             CAR ;
             CAR ;
             SWAP ;
             ITER { DUP ;
                    DUG 2 ;
                    CDR ;
                    ITER { SWAP ;
                           DUP 3 ;
                           CAR ;
                           IF_NONE
                             { UNIT }
                             { DUP 6 ;
                               CAR ;
                               CDR ;
                               DUP 4 ;
                               GET 3 ;
                               PAIR ;
                               SENDER ;
                               DIG 2 ;
                               PAIR ;
                               PAIR ;
                               DUP 5 ;
                               SWAP ;
                               EXEC } ;
                           DROP ;
                           PUSH nat 1 ;
                           DUP 3 ;
                           GET 4 ;
                           COMPARE ;
                           GT ;
                           IF { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                              { PUSH nat 0 ;
                                DUP 3 ;
                                GET 4 ;
                                COMPARE ;
                                EQ ;
                                IF { DUP ;
                                     DIG 2 ;
                                     GET 3 ;
                                     GET ;
                                     IF_NONE { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { DROP } }
                                   { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 3 ;
                                     DUP 4 ;
                                     CAR ;
                                     IF_NONE
                                       { DROP }
                                       { DUP 3 ;
                                         DUP 3 ;
                                         GET ;
                                         IF_NONE
                                           { DROP 3 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                           { COMPARE ;
                                             EQ ;
                                             IF { NONE address ; SWAP ; UPDATE }
                                                { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } } } ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     IF_NONE { SWAP ; DROP } { DIG 2 ; GET 3 ; SWAP ; SOME ; SWAP ; UPDATE } } } } ;
                    SWAP ;
                    DROP } ;
             SWAP ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR } ;
         LAMBDA
           (pair bool address)
           unit
           { CDR ;
             SENDER ;
             VIEW "is_admin" bool ;
             IF_NONE
               { PUSH string "NOT_AN_ADMIN" ; FAILWITH }
               { IF { UNIT } { PUSH string "NOT_AN_ADMIN" ; FAILWITH } } } ;
         LAMBDA
           (pair bool address)
           unit
           { CDR ;
             SENDER ;
             VIEW "is_minter" bool ;
             IF_NONE
               { PUSH string "NOT_A_MINTER" ; FAILWITH }
               { IF { UNIT } { PUSH string "NOT_A_MINTER" ; FAILWITH } } } ;
         LAMBDA (pair nat (pair address nat)) nat { UNPAIR ; SWAP ; CDR ; ADD } ;
         DIG 4 ;
         UNPAIR ;
         PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { FAILWITH } { DROP } ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 5 ;
                     DROP 3 ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         IF_LEFT
                           { IF_LEFT
                               { ITER { SWAP ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        GET ;
                                        IF_NONE
                                          { DROP 2 ; PUSH string "FA2_PROPOSAL_UNDEFINED" ; FAILWITH }
                                          { SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            CDR ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            GET 12 ;
                                            DUP 3 ;
                                            GET 11 ;
                                            PUSH nat 1 ;
                                            DUP 5 ;
                                            GET 7 ;
                                            DUP 6 ;
                                            GET 5 ;
                                            DIG 6 ;
                                            GET 3 ;
                                            PUSH bool True ;
                                            PAIR 7 ;
                                            SOME ;
                                            DIG 3 ;
                                            UPDATE ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            CDR ;
                                            CAR ;
                                            PAIR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            CAR ;
                                            PAIR ;
                                            SWAP ;
                                            CAR ;
                                            PAIR } } ;
                                 NIL operation ;
                                 PAIR }
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DUP 3 ;
                                 CAR ;
                                 CDR ;
                                 DUP 4 ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 DIG 4 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 DIG 4 ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 NIL operation ;
                                 PAIR } }
                           { IF_LEFT
                               { ITER { SWAP ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DIG 2 ;
                                        NONE (pair bool
                                                   address
                                                   (map string bytes)
                                                   (pair bool bytes)
                                                   nat
                                                   nat
                                                   (list (pair address nat))) ;
                                        SWAP ;
                                        UPDATE ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR } ;
                                 NIL operation ;
                                 PAIR }
                               { SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 DUP 3 ;
                                 CAR ;
                                 CDR ;
                                 DUP 4 ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 DIG 3 ;
                                 DIG 4 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 NIL operation ;
                                 PAIR } } }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SENDER ;
                         DIG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 2 ;
                         GET ;
                         IF_NONE
                           { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                           { COMPARE ;
                             EQ ;
                             IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         UNPAIR ;
                         CDR ;
                         DUP 6 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 5 ;
                         NONE address ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } }
                   { DIG 4 ;
                     DROP ;
                     IF_LEFT
                       { DIG 4 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         IF { PUSH string "MINTING_PAUSED" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         MEM ;
                         IF { PUSH string "ALREADY_MINTED" ; FAILWITH } {} ;
                         PUSH nat 250 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         COMPARE ;
                         LE ;
                         NOT ;
                         IF { PUSH string "ROYALTIES_CANNOT_EXCEED_25_PERCENT" ; FAILWITH } {} ;
                         PUSH nat 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 6 ;
                         ITER { SWAP ; PAIR ; DUP 4 ; SWAP ; EXEC } ;
                         DIG 3 ;
                         DROP ;
                         PUSH nat 1000 ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "TOTAL_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH } {} ;
                         PUSH string "MAX_25_ADDRESS_IN_SPLIT" ;
                         PUSH nat 25 ;
                         DUP 3 ;
                         GET 6 ;
                         SIZE ;
                         COMPARE ;
                         LE ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         DUP ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         PUSH nat 1 ;
                         DUP 4 ;
                         GET 3 ;
                         EMPTY_MAP string bytes ;
                         DIG 5 ;
                         CAR ;
                         SOME ;
                         PUSH string "" ;
                         UPDATE ;
                         SENDER ;
                         PUSH bool False ;
                         PAIR 7 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PUSH nat 1 ;
                         DUP 4 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DIG 3 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR }
                       { DIG 2 ;
                         DIG 3 ;
                         DROP 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         IF_LEFT
                           { IF_LEFT
                               { DIG 3 ;
                                 DROP ;
                                 DUP ;
                                 CAR ;
                                 MAP { DUP 3 ;
                                       CAR ;
                                       CAR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       GET ;
                                       IF_NONE
                                         { DROP ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                         { SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CAR ;
                                           SWAP ;
                                           COMPARE ;
                                           EQ ;
                                           IF { PUSH nat 1 } { PUSH nat 0 } ;
                                           SWAP ;
                                           PAIR } } ;
                                 SWAP ;
                                 CDR ;
                                 PUSH mutez 0 ;
                                 DIG 2 ;
                                 TRANSFER_TOKENS ;
                                 SWAP ;
                                 NIL operation ;
                                 DIG 2 ;
                                 CONS ;
                                 PAIR }
                               { MAP { DUP ;
                                       CDR ;
                                       MAP { DUP ; GET 4 ; SWAP ; DUP ; DUG 2 ; GET 3 ; DIG 2 ; CAR ; SOME ; PAIR 3 } ;
                                       SWAP ;
                                       CAR ;
                                       SOME ;
                                       PAIR } ;
                                 SWAP ;
                                 LAMBDA
                                   (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                                   unit
                                   { UNPAIR ;
                                     UNPAIR ;
                                     DIG 2 ;
                                     UNPAIR ;
                                     DUP 4 ;
                                     DUP 4 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DROP 4 ; UNIT }
                                        { DIG 3 ;
                                          PAIR ;
                                          DIG 2 ;
                                          PAIR ;
                                          MEM ;
                                          IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                                 DIG 2 ;
                                 PAIR ;
                                 PAIR ;
                                 DIG 2 ;
                                 SWAP ;
                                 EXEC } }
                           { DIG 3 ;
                             DROP ;
                             SENDER ;
                             DUP 3 ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             ITER { SWAP ;
                                    DUP 3 ;
                                    DUP 3 ;
                                    IF_LEFT {} {} ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                    SWAP ;
                                    IF_LEFT
                                      { SWAP ;
                                        UNIT ;
                                        SOME ;
                                        DUP 3 ;
                                        GET 4 ;
                                        DUP 4 ;
                                        GET 3 ;
                                        PAIR ;
                                        DIG 3 ;
                                        CAR ;
                                        PAIR ;
                                        UPDATE }
                                      { DUP ;
                                        DUG 2 ;
                                        GET 4 ;
                                        DUP 3 ;
                                        GET 3 ;
                                        PAIR ;
                                        DIG 2 ;
                                        CAR ;
                                        PAIR ;
                                        NONE unit ;
                                        SWAP ;
                                        UPDATE } } ;
                             SWAP ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SWAP ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } ;
                         UNPAIR ;
                         DUP 3 ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR } } }
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DROP 3 ;
                     IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE
                           { DROP 3 ; PUSH string "FA2_PROPOSAL_UNDEFINED" ; FAILWITH }
                           { DUP ;
                             CAR ;
                             NOT ;
                             IF { PUSH string "PROPOSAL_NEED_TO_BE_ACCEPTED" ; FAILWITH } {} ;
                             PUSH string "SENDER_MUST_BE_MINTER" ;
                             SENDER ;
                             DUP 3 ;
                             GET 3 ;
                             COMPARE ;
                             EQ ;
                             NOT ;
                             IF { FAILWITH } { DROP } ;
                             DUP ;
                             GET 12 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 11 ;
                             DUP 3 ;
                             GET 7 ;
                             PUSH nat 1 ;
                             DUP 5 ;
                             GET 5 ;
                             DIG 5 ;
                             GET 3 ;
                             PAIR 6 ;
                             DUP 3 ;
                             CDR ;
                             DUP 4 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DUP 3 ;
                             DUP 5 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DUP 5 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DUP 5 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             DUP 4 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             DUP 4 ;
                             NONE (pair bool
                                        address
                                        (map string bytes)
                                        (pair bool bytes)
                                        nat
                                        nat
                                        (list (pair address nat))) ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             DIG 5 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             UNIT ;
                             SENDER ;
                             PAIR 3 ;
                             UNPAIR 3 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DIG 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             PAIR ;
                             SENDER ;
                             DUG 2 ;
                             UNPAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             DIG 3 ;
                             MUL ;
                             SWAP ;
                             GET 5 ;
                             NIL address ;
                             DIG 4 ;
                             PAIR ;
                             PAIR ;
                             LEFT (list address) ;
                             LOOP_LEFT
                               { UNPAIR ;
                                 UNPAIR ;
                                 PUSH nat 0 ;
                                 DUP 4 ;
                                 COMPARE ;
                                 GT ;
                                 IF { PUSH nat 1 ;
                                      DIG 3 ;
                                      SUB ;
                                      ABS ;
                                      DUG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CONS ;
                                      DIG 2 ;
                                      PAIR ;
                                      PAIR ;
                                      LEFT (list address) }
                                    { DIG 2 ; DROP 2 ; RIGHT (pair (pair address (list address)) nat) } } ;
                             SWAP ;
                             NIL (pair nat address) ;
                             PAIR ;
                             SWAP ;
                             ITER { SWAP ;
                                    UNPAIR ;
                                    PUSH nat 1 ;
                                    DUP 3 ;
                                    ADD ;
                                    SWAP ;
                                    DIG 3 ;
                                    DIG 3 ;
                                    PAIR ;
                                    CONS ;
                                    PAIR } ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             NIL (pair (option address) nat nat) ;
                             PAIR ;
                             SWAP ;
                             ITER { DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    MEM ;
                                    IF { DROP 3 ; PUSH string "FA2_INVALID_TOKEN_ID" ; FAILWITH }
                                       { SWAP ;
                                         DUP ;
                                         DUG 2 ;
                                         CDR ;
                                         DIG 2 ;
                                         CAR ;
                                         PUSH nat 1 ;
                                         DIG 3 ;
                                         DIG 4 ;
                                         CDR ;
                                         SOME ;
                                         PAIR 3 ;
                                         CONS ;
                                         PAIR } } ;
                             DUP ;
                             CDR ;
                             LAMBDA
                               (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                               unit
                               { DROP ; UNIT } ;
                             NIL (pair (option address) (list (pair (option address) nat nat))) ;
                             DIG 3 ;
                             CAR ;
                             NONE address ;
                             PAIR ;
                             CONS ;
                             PAIR ;
                             PAIR ;
                             DIG 2 ;
                             SWAP ;
                             EXEC ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DUP 3 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIG 2 ;
                             PAIR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR } ;
                         NIL operation ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE
                           { DROP 2 ; PUSH string "FA2_PROPOSAL_UNDEFINED" ; FAILWITH }
                           { PUSH string "SENDER_MUST_BE_MINTER" ;
                             SENDER ;
                             DIG 2 ;
                             GET 3 ;
                             COMPARE ;
                             EQ ;
                             NOT ;
                             IF { FAILWITH } { DROP } ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             NONE (pair bool
                                        address
                                        (map string bytes)
                                        (pair bool bytes)
                                        nat
                                        nat
                                        (list (pair address nat))) ;
                             SWAP ;
                             UPDATE ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } } }
                   { DIG 5 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DIG 3 ;
                         DROP 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         PUSH string "" ;
                         GET ;
                         IF_NONE
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             SOME ;
                             PUSH string "" ;
                             UPDATE ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR }
                           { DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             SOME ;
                             PUSH string "" ;
                             UPDATE ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { DIG 4 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH nat 250 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         COMPARE ;
                         LE ;
                         NOT ;
                         IF { PUSH string "ROYALTIES_CANNOT_EXCEED_25_PERCENT" ; FAILWITH } {} ;
                         PUSH nat 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 8 ;
                         ITER { SWAP ; PAIR ; DUP 4 ; SWAP ; EXEC } ;
                         DIG 3 ;
                         DROP ;
                         PUSH nat 1000 ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { PUSH string "TOTAL_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH } {} ;
                         PUSH string "MAX_25_ADDRESS_IN_SPLIT" ;
                         PUSH nat 25 ;
                         DUP 3 ;
                         GET 8 ;
                         SIZE ;
                         COMPARE ;
                         LE ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         DUP ;
                         GET 8 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         PUSH nat 1 ;
                         DUP 4 ;
                         GET 5 ;
                         EMPTY_MAP string bytes ;
                         DUP 6 ;
                         GET 3 ;
                         SOME ;
                         PUSH string "" ;
                         UPDATE ;
                         SENDER ;
                         PUSH bool False ;
                         PAIR 7 ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         GET ;
                         IF_NONE
                           { DROP 3 ; PUSH string "FA2_PROPOSAL_UNDEFINED" ; FAILWITH }
                           { PUSH string "SENDER_MUST_BE_MINTER" ;
                             SENDER ;
                             DIG 2 ;
                             GET 3 ;
                             COMPARE ;
                             EQ ;
                             NOT ;
                             IF { FAILWITH } { DROP } ;
                             DUP 3 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             SOME ;
                             DIG 2 ;
                             CAR ;
                             UPDATE ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } } } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DROP 4 ;
             DUP ;
             CAR ;
             DUP 3 ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE
               { DROP 3 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
               { PUSH string "SENDER_MUST_BE_MINTER" ;
                 SENDER ;
                 DUP 3 ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { FAILWITH } { DROP } ;
                 DUP ;
                 GET 7 ;
                 CAR ;
                 NOT ;
                 IF { PUSH string "LICENSE_SEALED" ; FAILWITH } {} ;
                 DUP 4 ;
                 CDR ;
                 DUP 5 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DIG 4 ;
                 CDR ;
                 UPDATE 7 ;
                 SOME ;
                 DIG 3 ;
                 UPDATE ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } } } ;
  view "token_metadata"
       nat
       (option (pair (nat %token_id) (map %token_info string bytes)))
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         CDR ;
         CAR ;
         CAR ;
         CAR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         GET ;
         IF_NONE
           { DROP 2 ; NONE (pair nat (map string bytes)) }
           { DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP 3 ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE
               { DROP 3 ; NONE (pair nat (map string bytes)) }
               { DUP 4 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 PUSH string "symbol" ;
                 GET ;
                 IF_NONE
                   { DUP ;
                     GET 3 ;
                     PUSH nat 1 ;
                     DIG 5 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DIG 4 ;
                     MUL ;
                     DUP 5 ;
                     SUB ;
                     ADD ;
                     PACK ;
                     PUSH string "edition_number" ;
                     PAIR 3 ;
                     UNPAIR 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     GET 7 ;
                     CDR ;
                     PUSH string "license" ;
                     PAIR 3 ;
                     UNPAIR 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SOME }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     PUSH nat 1 ;
                     DIG 6 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     MUL ;
                     DUP 6 ;
                     SUB ;
                     ADD ;
                     PACK ;
                     PUSH string "edition_number" ;
                     PAIR 3 ;
                     UNPAIR 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIG 2 ;
                     GET 7 ;
                     CDR ;
                     PUSH string "license" ;
                     PAIR 3 ;
                     UNPAIR 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PUSH string "symbol" ;
                     PAIR 3 ;
                     UNPAIR 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SOME } } } } ;
  view "royalty_distribution"
       nat
       (option
          (pair address (pair (nat %royalty) (list %splits (pair (address %address) (nat %pct))))))
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CAR ;
         CAR ;
         SWAP ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR ;
         SWAP ;
         CAR ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE
           { NONE (pair address (pair nat (list (pair address nat)))) }
           { DUP ;
             GET 10 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 9 ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             SOME } } ;
  view "splits"
       nat
       (option (list (pair (address %address) (nat %pct))))
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CAR ;
         CAR ;
         SWAP ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR ;
         SWAP ;
         CAR ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE { NONE (list (pair address nat)) } { GET 10 ; SOME } } ;
  view "royalty_splits"
       nat
       (option (pair (nat %royalty) (list %splits (pair (address %address) (nat %pct)))))
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CAR ;
         CAR ;
         SWAP ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR ;
         SWAP ;
         CAR ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE
           { NONE (pair nat (list (pair address nat))) }
           { DUP ; GET 10 ; SWAP ; GET 9 ; PAIR ; SOME } } ;
  view "royalty"
       nat
       (option nat)
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CAR ;
         CAR ;
         SWAP ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR ;
         SWAP ;
         CAR ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE { NONE nat } { GET 9 ; SOME } } ;
  view "minter"
       nat
       (option address)
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CAR ;
         CAR ;
         SWAP ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR ;
         SWAP ;
         CAR ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE { NONE address } { CAR ; SOME } } ;
  view "is_token_minter"
       (pair address nat)
       (option bool)
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CAR ;
         CAR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR ;
         DIG 2 ;
         CAR ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE
           { DROP ; NONE bool }
           { SWAP ;
             CAR ;
             SWAP ;
             CAR ;
             COMPARE ;
             EQ ;
             IF { PUSH bool True ; SOME } { PUSH bool False ; SOME } } } ;
  view "is_unique_edition"
       nat
       (option bool)
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         CAR ;
         CAR ;
         SWAP ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR ;
         SWAP ;
         CAR ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE
           { NONE bool }
           { PUSH nat 1 ;
             SWAP ;
             GET 5 ;
             COMPARE ;
             GT ;
             IF { PUSH bool False ; SOME } { PUSH bool True ; SOME } } } }

