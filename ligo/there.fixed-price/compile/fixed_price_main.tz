{ parameter
    (or (or (or (or (pair %accept_offer (pair %fa2_token (nat %id) (address %address)) (address %buyer))
                    (or %admin
                       (or (or (pair %add_stable_coin (pair %fa2_base (nat %id) (address %address)) (nat %mucoin))
                               (bool %contract_will_update))
                           (or (bool %referral_activated)
                               (pair %remove_stable_coin (nat %id) (address %address))))
                       (or (or (address %update_permission_manager)
                               (pair %update_primary_fee (address %address) (nat %percent)))
                           (pair %update_secondary_fee (address %address) (nat %percent)))))
                (or (pair %buy_dropped_token
                       (pair %fa2_token (nat %id) (address %address))
                       (address %seller)
                       (address %receiver)
                       (option %referrer address))
                    (pair %buy_fixed_price_token
                       (pair %fa2_token (nat %id) (address %address))
                       (address %seller)
                       (address %receiver)
                       (option %referrer address))))
            (or (or (list %create_drops
                       (pair (pair %fa2_token (nat %id) (address %address))
                             (or %commodity (pair %fa2 (nat %id) (address %address) (nat %amount)) (mutez %tez))
                             (timestamp %drop_date)))
                    (pair %create_offer
                       (pair %fa2_token (nat %id) (address %address))
                       (or %commodity (pair %fa2 (nat %id) (address %address) (nat %amount)) (mutez %tez))))
                (or (list %create_sales
                       (pair (option %buyer address)
                             (or %commodity (pair %fa2 (nat %id) (address %address) (nat %amount)) (mutez %tez))
                             (pair %fa2_token (nat %id) (address %address))))
                    (list %revoke_drops (pair (nat %id) (address %address))))))
        (or (or (pair %revoke_offer (nat %id) (address %address))
                (list %revoke_sales (pair (nat %id) (address %address))))
            (list %update_sales
               (pair (option %buyer address)
                     (or %commodity (pair %fa2 (nat %id) (address %address) (nat %amount)) (mutez %tez))
                     (pair %fa2_token (nat %id) (address %address)))))) ;
  storage
    (pair (pair %admin
             (pair (bool %contract_will_update) (address %permission_manager))
             (bool %referral_activated))
          (big_map %for_sale
             (pair (pair (nat %id) (address %address)) address)
             (pair (or %commodity (pair %fa2 (nat %id) (address %address) (nat %amount)) (mutez %tez))
                   (option %buyer address)))
          (big_map %drops
             (pair (pair (nat %id) (address %address)) address)
             (pair (or %commodity (pair %fa2 (nat %id) (address %address) (nat %amount)) (mutez %tez))
                   (timestamp %drop_date)))
          (big_map %offers
             (pair (pair (nat %id) (address %address)) address)
             (or (pair %fa2 (nat %id) (address %address) (nat %amount)) (mutez %tez)))
          (big_map %fa2_sold (pair (nat %id) (address %address)) unit)
          (big_map %fa2_dropped (pair (nat %id) (address %address)) unit)
          (pair %fee_primary (address %address) (nat %percent))
          (pair %fee_secondary (address %address) (nat %percent))
          (big_map %metadata string bytes)
          (big_map %stable_coin (pair (nat %id) (address %address)) nat)) ;
  code { LAMBDA
           (pair (option nat) (or (pair nat address nat) mutez))
           (or (pair nat address nat) mutez)
           { UNPAIR ;
             SWAP ;
             IF_LEFT
               { SWAP ;
                 IF_NONE
                   { PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DIG 2 ;
                     CAR ;
                     PAIR 3 ;
                     LEFT mutez }
                   { PUSH nat 1000 ;
                     SWAP ;
                     DUP 3 ;
                     GET 4 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIVISION_BY_ZERO" ; FAILWITH } { CAR } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DIG 2 ;
                     CAR ;
                     PAIR 3 ;
                     LEFT mutez } }
               { SWAP ;
                 IF_NONE
                   { DROP ; PUSH mutez 0 ; RIGHT (pair nat address nat) }
                   { PUSH nat 1000 ;
                     SWAP ;
                     DIG 2 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIVISION_BY_ZERO" ; FAILWITH } { CAR } ;
                     RIGHT (pair nat address nat) } } } ;
         LAMBDA
           (pair (or (pair nat address nat) mutez) (or (pair nat address nat) mutez))
           (or (pair nat address nat) mutez)
           { UNPAIR ;
             IF_LEFT
               { SWAP ;
                 IF_LEFT
                   { DUP ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DUP 4 ;
                     GET 3 ;
                     COMPARE ;
                     EQ ;
                     AND ;
                     IF { GET 4 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 4 ;
                          ADD ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 3 ;
                          DIG 2 ;
                          CAR ;
                          PAIR 3 ;
                          LEFT mutez }
                        { DROP 2 ; PUSH string "CAN_NOT_ADD_DIFFERENT_COMMODITIES" ; FAILWITH } }
                   { DROP 2 ; PUSH string "CAN_NOT_ADD_DIFFERENT_COMMODITIES" ; FAILWITH } }
               { SWAP ;
                 IF_LEFT
                   { DROP 2 ; PUSH string "CAN_NOT_ADD_DIFFERENT_COMMODITIES" ; FAILWITH }
                   { ADD ; RIGHT (pair nat address nat) } } } ;
         LAMBDA
           (pair (or (pair nat address nat) mutez) (or (pair nat address nat) mutez))
           (or (pair nat address nat) mutez)
           { UNPAIR ;
             IF_LEFT
               { SWAP ;
                 IF_LEFT
                   { DUP ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DUP 4 ;
                     GET 3 ;
                     COMPARE ;
                     EQ ;
                     AND ;
                     IF { DUP ;
                          GET 4 ;
                          DUP 3 ;
                          GET 4 ;
                          COMPARE ;
                          GT ;
                          IF { GET 4 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET 4 ;
                               SUB ;
                               ABS ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET 3 ;
                               DIG 2 ;
                               CAR ;
                               PAIR 3 ;
                               LEFT mutez }
                             { DROP ;
                               PUSH nat 0 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET 3 ;
                               DIG 2 ;
                               CAR ;
                               PAIR 3 ;
                               LEFT mutez } }
                        { DROP 2 ; PUSH string "CAN_NOT_SUBSTRACT_DIFFERENT_COMMODITIES" ; FAILWITH } }
                   { DROP 2 ; PUSH string "CAN_NOT_SUBSTRACT_DIFFERENT_COMMODITIES" ; FAILWITH } }
               { SWAP ;
                 IF_LEFT
                   { DROP 2 ; PUSH string "CAN_NOT_SUBSTRACT_DIFFERENT_COMMODITIES" ; FAILWITH }
                   { SWAP ;
                     SUB_MUTEZ ;
                     IF_NONE
                       { PUSH mutez 0 ; RIGHT (pair nat address nat) }
                       { RIGHT (pair nat address nat) } } } } ;
         LAMBDA
           (pair (list operation) (list operation))
           (list operation)
           { LEFT (list operation) ;
             LOOP_LEFT
               { UNPAIR ;
                 IF_CONS
                   { DIG 2 ; SWAP ; CONS ; SWAP ; PAIR ; LEFT (list operation) }
                   { RIGHT (pair (list operation) (list operation)) } } } ;
         LAMBDA
           address
           (contract unit)
           { CONTRACT unit ;
             IF_NONE
               { PUSH string "Return address does not resolve to contract" ; FAILWITH }
               {} } ;
         LAMBDA
           (pair (pair address address) (pair nat address nat))
           (list operation)
           { UNPAIR ;
             UNPAIR ;
             DUP 3 ;
             GET 3 ;
             CONTRACT %transfer
               (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
             IF_NONE { PUSH string "Invalid FA2 Address" ; FAILWITH } {} ;
             PUSH nat 0 ;
             DUP 5 ;
             GET 4 ;
             COMPARE ;
             GT ;
             IF { NIL operation ;
                  SWAP ;
                  PUSH mutez 0 ;
                  NIL (pair address (list (pair address nat nat))) ;
                  NIL (pair address nat nat) ;
                  DUP 8 ;
                  GET 4 ;
                  DIG 8 ;
                  CAR ;
                  DIG 8 ;
                  PAIR 3 ;
                  CONS ;
                  DIG 5 ;
                  PAIR ;
                  CONS ;
                  TRANSFER_TOKENS ;
                  CONS }
                { DROP 4 ; NIL operation } } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         LAMBDA
           (pair (lambda address (contract unit)) (pair mutez address))
           (list operation)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             PUSH mutez 0 ;
             DUP 3 ;
             COMPARE ;
             GT ;
             IF { NIL operation ; SWAP ; DIG 2 ; UNIT ; TRANSFER_TOKENS ; CONS }
                { DROP 2 ; NIL operation } } ;
         SWAP ;
         APPLY ;
         DUP 7 ;
         DUP 7 ;
         DUP 6 ;
         DUP 5 ;
         DUP 5 ;
         PAIR 5 ;
         LAMBDA
           (pair (pair (lambda (pair mutez address) (list operation))
                       (pair (lambda (pair (pair address address) (pair nat address nat)) (list operation))
                             (pair (lambda (pair (list operation) (list operation)) (list operation))
                                   (pair (lambda
                                            (pair (or (pair nat address nat) mutez) (or (pair nat address nat) mutez))
                                            (or (pair nat address nat) mutez))
                                         (lambda
                                            (pair (option nat) (or (pair nat address nat) mutez))
                                            (or (pair nat address nat) mutez))))))
                 (pair (pair address (or (pair nat address nat) mutez))
                       (pair (list (pair address nat)) (list operation))))
           (pair (list operation) (or (pair nat address nat) mutez))
           { UNPAIR ;
             UNPAIR 5 ;
             DIG 5 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             ITER { CDR ; ADD } ;
             PUSH nat 1000 ;
             SWAP ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { PUSH string "TOTAL_SPLIT_MUST_BE_100_PERCENT" ; FAILWITH } {} ;
             DIG 8 ;
             DIG 8 ;
             DIG 8 ;
             DIG 8 ;
             DIG 8 ;
             DUP 9 ;
             DIG 8 ;
             PAIR 7 ;
             LAMBDA
               (pair (pair address
                           (pair (or (pair nat address nat) mutez)
                                 (pair (lambda (pair mutez address) (list operation))
                                       (pair (lambda (pair (pair address address) (pair nat address nat)) (list operation))
                                             (pair (lambda (pair (list operation) (list operation)) (list operation))
                                                   (pair (lambda
                                                            (pair (or (pair nat address nat) mutez) (or (pair nat address nat) mutez))
                                                            (or (pair nat address nat) mutez))
                                                         (lambda
                                                            (pair (option nat) (or (pair nat address nat) mutez))
                                                            (or (pair nat address nat) mutez))))))))
                     (pair (pair (list operation) (or (pair nat address nat) mutez)) (pair address nat)))
               (pair (list operation) (or (pair nat address nat) mutez))
               { UNPAIR ;
                 UNPAIR 7 ;
                 DIG 7 ;
                 UNPAIR ;
                 UNPAIR ;
                 DIG 4 ;
                 DUP 4 ;
                 CDR ;
                 SOME ;
                 PAIR ;
                 DIG 9 ;
                 SWAP ;
                 EXEC ;
                 IF_LEFT
                   { DIG 5 ;
                     DROP ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     COMPARE ;
                     GT ;
                     IF { DIG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          LEFT mutez ;
                          PAIR ;
                          DIG 7 ;
                          SWAP ;
                          EXEC ;
                          DUG 2 ;
                          DIG 3 ;
                          CAR ;
                          DIG 4 ;
                          PAIR ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          PAIR ;
                          DIG 2 ;
                          SWAP ;
                          EXEC ;
                          PAIR }
                        { DIG 3 ; DIG 4 ; DIG 5 ; DIG 6 ; DIG 7 ; DROP 6 ; PAIR } }
                   { DIG 4 ;
                     DIG 6 ;
                     DROP 2 ;
                     PUSH mutez 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GT ;
                     IF { DIG 2 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          RIGHT (pair nat address nat) ;
                          PAIR ;
                          DIG 6 ;
                          SWAP ;
                          EXEC ;
                          DIG 2 ;
                          DIG 3 ;
                          CAR ;
                          DIG 3 ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC ;
                          PAIR ;
                          DIG 2 ;
                          SWAP ;
                          EXEC ;
                          PAIR }
                        { DIG 3 ; DIG 4 ; DIG 5 ; DIG 6 ; DROP 5 ; PAIR } } } ;
             SWAP ;
             APPLY ;
             DIG 3 ;
             IF_LEFT
               { PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 DIG 2 ;
                 CAR ;
                 PAIR 3 ;
                 LEFT mutez ;
                 DIG 3 ;
                 PAIR ;
                 DIG 2 ;
                 ITER { SWAP ; PAIR ; SWAP ; DUP ; DUG 2 ; SWAP ; EXEC } ;
                 SWAP ;
                 DROP }
               { DROP ;
                 PUSH mutez 0 ;
                 RIGHT (pair nat address nat) ;
                 DIG 3 ;
                 PAIR ;
                 DIG 2 ;
                 ITER { SWAP ; PAIR ; SWAP ; DUP ; DUG 2 ; SWAP ; EXEC } ;
                 SWAP ;
                 DROP } } ;
         SWAP ;
         APPLY ;
         DUP 3 ;
         DIG 2 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda (pair mutez address) (list operation))
                       (lambda (pair (pair address address) (pair nat address nat)) (list operation)))
                 (pair (pair (or (pair nat address nat) mutez) address) address))
           (list operation)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             IF_LEFT
               { DIG 3 ; DROP ; DUG 2 ; PAIR ; PAIR ; EXEC }
               { SWAP ; DIG 4 ; DROP 2 ; PAIR ; EXEC } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair (pair nat address) address)
                 (pair (pair (pair bool address) bool)
                       (big_map
                          (pair (pair nat address) address)
                          (pair (or (pair nat address nat) mutez) (option address)))
                       (big_map
                          (pair (pair nat address) address)
                          (pair (or (pair nat address nat) mutez) timestamp))
                       (big_map (pair (pair nat address) address) (or (pair nat address nat) mutez))
                       (big_map (pair nat address) unit)
                       (big_map (pair nat address) unit)
                       (pair address nat)
                       (pair address nat)
                       (big_map string bytes)
                       (big_map (pair nat address) nat)))
           (pair (or (pair nat address nat) mutez) timestamp)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             GET 5 ;
             DUG 2 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH string "TOKEN_IS_NOT_DROPPED" ; FAILWITH } {} } ;
         DIG 8 ;
         DIG 8 ;
         DIG 8 ;
         DIG 8 ;
         DIG 7 ;
         DIG 7 ;
         DIG 7 ;
         PAIR 7 ;
         LAMBDA
           (pair (pair (lambda (pair (pair (or (pair nat address nat) mutez) address) address) (list operation))
                       (pair (lambda
                                (pair (pair address (or (pair nat address nat) mutez))
                                      (pair (list (pair address nat)) (list operation)))
                                (pair (list operation) (or (pair nat address nat) mutez)))
                             (pair (lambda (pair (pair address address) (pair nat address nat)) (list operation))
                                   (pair (lambda (pair (list operation) (list operation)) (list operation))
                                         (pair (lambda
                                                  (pair (or (pair nat address nat) mutez) (or (pair nat address nat) mutez))
                                                  (or (pair nat address nat) mutez))
                                               (pair (lambda
                                                        (pair (or (pair nat address nat) mutez) (or (pair nat address nat) mutez))
                                                        (or (pair nat address nat) mutez))
                                                     (lambda
                                                        (pair (option nat) (or (pair nat address nat) mutez))
                                                        (or (pair nat address nat) mutez))))))))
                 (pair (pair (pair (pair nat address) address) (pair address address))
                       (pair (pair (option address) (or (pair nat address nat) mutez))
                             (pair (pair (pair bool address) bool)
                                   (big_map
                                      (pair (pair nat address) address)
                                      (pair (or (pair nat address nat) mutez) (option address)))
                                   (big_map
                                      (pair (pair nat address) address)
                                      (pair (or (pair nat address nat) mutez) timestamp))
                                   (big_map (pair (pair nat address) address) (or (pair nat address nat) mutez))
                                   (big_map (pair nat address) unit)
                                   (big_map (pair nat address) unit)
                                   (pair address nat)
                                   (pair address nat)
                                   (big_map string bytes)
                                   (big_map (pair nat address) nat)))))
           (list operation)
           { UNPAIR ;
             UNPAIR 7 ;
             DIG 7 ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 4 ;
             UNPAIR ;
             UNPAIR ;
             DUP ;
             IF_NONE
               { DUP 3 ;
                 GET 9 ;
                 DUP 7 ;
                 MEM ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      DUP 4 ;
                      GET 15 ;
                      CDR ;
                      SOME ;
                      PAIR ;
                      DUP 15 ;
                      SWAP ;
                      EXEC ;
                      DUP 4 ;
                      GET 15 ;
                      CAR ;
                      PAIR }
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      DUP 4 ;
                      GET 13 ;
                      CDR ;
                      SOME ;
                      PAIR ;
                      DUP 15 ;
                      SWAP ;
                      EXEC ;
                      DUP 4 ;
                      GET 13 ;
                      CAR ;
                      PAIR } }
               { DROP ;
                 DUP 3 ;
                 GET 9 ;
                 DUP 7 ;
                 MEM ;
                 IF { DUP 3 ;
                      CAR ;
                      CDR ;
                      IF { PUSH nat 10 ;
                           DUP 4 ;
                           GET 15 ;
                           CDR ;
                           COMPARE ;
                           GE ;
                           IF { SWAP ;
                                DUP ;
                                DUG 2 ;
                                PUSH nat 10 ;
                                DUP 5 ;
                                GET 15 ;
                                CDR ;
                                SUB ;
                                ABS ;
                                SOME ;
                                PAIR ;
                                DUP 15 ;
                                SWAP ;
                                EXEC ;
                                DUP 4 ;
                                GET 15 ;
                                CAR ;
                                PAIR }
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                DUP 4 ;
                                GET 15 ;
                                CDR ;
                                SOME ;
                                PAIR ;
                                DUP 15 ;
                                SWAP ;
                                EXEC ;
                                DUP 4 ;
                                GET 15 ;
                                CAR ;
                                PAIR } }
                         { SWAP ;
                           DUP ;
                           DUG 2 ;
                           DUP 4 ;
                           GET 15 ;
                           CDR ;
                           SOME ;
                           PAIR ;
                           DUP 15 ;
                           SWAP ;
                           EXEC ;
                           DUP 4 ;
                           GET 15 ;
                           CAR ;
                           PAIR } }
                    { DUP 3 ;
                      CAR ;
                      CDR ;
                      IF { PUSH nat 10 ;
                           DUP 4 ;
                           GET 13 ;
                           CDR ;
                           COMPARE ;
                           GE ;
                           IF { SWAP ;
                                DUP ;
                                DUG 2 ;
                                PUSH nat 10 ;
                                DUP 5 ;
                                GET 13 ;
                                CDR ;
                                SUB ;
                                ABS ;
                                SOME ;
                                PAIR ;
                                DUP 15 ;
                                SWAP ;
                                EXEC ;
                                DUP 4 ;
                                GET 13 ;
                                CAR ;
                                PAIR }
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                DUP 4 ;
                                GET 13 ;
                                CDR ;
                                SOME ;
                                PAIR ;
                                DUP 15 ;
                                SWAP ;
                                EXEC ;
                                DUP 4 ;
                                GET 13 ;
                                CAR ;
                                PAIR } }
                         { SWAP ;
                           DUP ;
                           DUG 2 ;
                           DUP 4 ;
                           GET 13 ;
                           CDR ;
                           SOME ;
                           PAIR ;
                           DUP 15 ;
                           SWAP ;
                           EXEC ;
                           DUP 4 ;
                           GET 13 ;
                           CAR ;
                           PAIR } } } ;
             DUP 7 ;
             CDR ;
             DUP 8 ;
             CAR ;
             VIEW "royalty_splits"
                  (option (pair (nat %royalty) (list %splits (pair (address %address) (nat %pct))))) ;
             IF_NONE
               { DUP 3 ;
                 IF_LEFT
                   { PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DIG 2 ;
                     CAR ;
                     PAIR 3 ;
                     LEFT mutez }
                   { DROP ; PUSH mutez 0 ; RIGHT (pair nat address nat) } ;
                 NIL operation ;
                 PAIR }
               { IF_NONE
                   { DUP 3 ;
                     IF_LEFT
                       { PUSH nat 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         DIG 2 ;
                         CAR ;
                         PAIR 3 ;
                         LEFT mutez }
                       { DROP ; PUSH mutez 0 ; RIGHT (pair nat address nat) } ;
                     NIL operation ;
                     PAIR }
                   { DUP 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SOME ;
                     PAIR ;
                     DUP 17 ;
                     SWAP ;
                     EXEC ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP 8 ;
                     PAIR ;
                     PAIR ;
                     DUP 11 ;
                     SWAP ;
                     EXEC } } ;
             UNPAIR ;
             DUP 6 ;
             GET 9 ;
             DUP 10 ;
             MEM ;
             IF { DIG 11 ;
                  DROP ;
                  DUP 5 ;
                  IF_LEFT
                    { PUSH nat 0 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 3 ;
                      DIG 2 ;
                      CAR ;
                      PAIR 3 ;
                      LEFT mutez }
                    { DROP ; PUSH mutez 0 ; RIGHT (pair nat address nat) } ;
                  SWAP ;
                  PAIR }
                { DUP 9 ;
                  CDR ;
                  DUP 10 ;
                  CAR ;
                  VIEW "commission_splits"
                       (option (pair (nat %commission_pct) (list %splits (pair (address %address) (nat %pct))))) ;
                  IF_NONE
                    { DIG 11 ;
                      DROP ;
                      DUP 5 ;
                      IF_LEFT
                        { PUSH nat 0 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 3 ;
                          DIG 2 ;
                          CAR ;
                          PAIR 3 ;
                          LEFT mutez }
                        { DROP ; PUSH mutez 0 ; RIGHT (pair nat address nat) } ;
                      SWAP ;
                      PAIR }
                    { IF_NONE
                        { DIG 11 ;
                          DROP ;
                          DUP 5 ;
                          IF_LEFT
                            { PUSH nat 0 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 3 ;
                              DIG 2 ;
                              CAR ;
                              PAIR 3 ;
                              LEFT mutez }
                            { DROP ; PUSH mutez 0 ; RIGHT (pair nat address nat) } ;
                          SWAP ;
                          PAIR }
                        { DUP 6 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          SOME ;
                          PAIR ;
                          DUP 19 ;
                          SWAP ;
                          EXEC ;
                          DUG 2 ;
                          CDR ;
                          PAIR ;
                          SWAP ;
                          DUP 9 ;
                          PAIR ;
                          PAIR ;
                          DIG 11 ;
                          SWAP ;
                          EXEC } } } ;
             UNPAIR ;
             DUP 4 ;
             CAR ;
             DUP 10 ;
             DUP 6 ;
             CDR ;
             PAIR ;
             PAIR ;
             DUP 13 ;
             SWAP ;
             EXEC ;
             PUSH nat 1 ;
             DUP 12 ;
             CDR ;
             DIG 12 ;
             CAR ;
             PAIR 3 ;
             DIG 9 ;
             DUP 12 ;
             PAIR ;
             PAIR ;
             DIG 12 ;
             SWAP ;
             EXEC ;
             DIG 6 ;
             IF_NONE
               { DIG 7 ;
                 DIG 14 ;
                 DROP 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 CDR ;
                 PAIR ;
                 DUP 12 ;
                 SWAP ;
                 EXEC ;
                 PAIR ;
                 DIG 10 ;
                 SWAP ;
                 EXEC ;
                 DIG 4 ;
                 PAIR ;
                 DIG 8 ;
                 SWAP ;
                 EXEC ;
                 DIG 5 ;
                 DIG 5 ;
                 DIG 2 ;
                 PAIR ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DIG 3 ;
                 PAIR ;
                 DUP 4 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 PAIR ;
                 DUP 3 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 PAIR ;
                 EXEC }
               { DIG 8 ;
                 CAR ;
                 CDR ;
                 IF { DUP 8 ;
                      PUSH nat 10 ;
                      SOME ;
                      PAIR ;
                      DIG 15 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      DUP 10 ;
                      DUP 3 ;
                      PAIR ;
                      PAIR ;
                      DUP 12 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      DIG 5 ;
                      DIG 6 ;
                      DIG 7 ;
                      CDR ;
                      PAIR ;
                      DUP 14 ;
                      SWAP ;
                      EXEC ;
                      PAIR ;
                      DUP 13 ;
                      SWAP ;
                      EXEC ;
                      PAIR ;
                      DIG 11 ;
                      SWAP ;
                      EXEC ;
                      DIG 5 ;
                      PAIR ;
                      DIG 9 ;
                      SWAP ;
                      EXEC ;
                      DIG 6 ;
                      DIG 6 ;
                      DIG 2 ;
                      PAIR ;
                      PAIR ;
                      DIG 5 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      DIG 3 ;
                      PAIR ;
                      DUP 5 ;
                      SWAP ;
                      EXEC ;
                      DIG 3 ;
                      PAIR ;
                      DUP 4 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      PAIR ;
                      DUP 3 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      PAIR ;
                      EXEC }
                    { DIG 14 ;
                      DROP 2 ;
                      DIG 3 ;
                      DIG 4 ;
                      DIG 5 ;
                      CDR ;
                      PAIR ;
                      DUP 12 ;
                      SWAP ;
                      EXEC ;
                      PAIR ;
                      DIG 10 ;
                      SWAP ;
                      EXEC ;
                      DIG 4 ;
                      PAIR ;
                      DIG 8 ;
                      SWAP ;
                      EXEC ;
                      DIG 5 ;
                      DIG 5 ;
                      DIG 2 ;
                      PAIR ;
                      PAIR ;
                      DIG 4 ;
                      SWAP ;
                      EXEC ;
                      DIG 2 ;
                      DIG 3 ;
                      PAIR ;
                      DUP 4 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      PAIR ;
                      DUP 3 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      PAIR ;
                      EXEC } } } ;
         SWAP ;
         APPLY ;
         PUSH int 86400 ;
         PUSH int 21600 ;
         LAMBDA
           (pair (or (pair nat address nat) mutez)
                 (pair (pair (pair bool address) bool)
                       (big_map
                          (pair (pair nat address) address)
                          (pair (or (pair nat address nat) mutez) (option address)))
                       (big_map
                          (pair (pair nat address) address)
                          (pair (or (pair nat address nat) mutez) timestamp))
                       (big_map (pair (pair nat address) address) (or (pair nat address nat) mutez))
                       (big_map (pair nat address) unit)
                       (big_map (pair nat address) unit)
                       (pair address nat)
                       (pair address nat)
                       (big_map string bytes)
                       (big_map (pair nat address) nat)))
           unit
           { UNPAIR ;
             IF_LEFT
               { SWAP ;
                 GET 18 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 DUP 3 ;
                 CAR ;
                 PAIR ;
                 GET ;
                 IF_NONE
                   { DROP ; PUSH string "FA2_NOT_SUPPORTED" ; FAILWITH }
                   { SWAP ;
                     GET 4 ;
                     COMPARE ;
                     GE ;
                     NOT ;
                     IF { PUSH string "PRICE_SHOULD_BE_MINIMUM_0.1" ; FAILWITH } { UNIT } } }
               { SWAP ;
                 DROP ;
                 PUSH mutez 100000 ;
                 SWAP ;
                 COMPARE ;
                 GE ;
                 NOT ;
                 IF { PUSH string "PRICE_SHOULD_BE_MINIMUM_0.1tez" ; FAILWITH } { UNIT } } } ;
         LAMBDA
           (or (pair nat address nat) mutez)
           unit
           { IF_LEFT
               { DROP ;
                 PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { FAILWITH } { DROP ; UNIT } }
               { PUSH string "WRONG_PRICE_SPECIFIED" ;
                 AMOUNT ;
                 DIG 2 ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { FAILWITH } { DROP ; UNIT } } } ;
         LAMBDA
           (pair address (option address))
           unit
           { UNPAIR ;
             SWAP ;
             IF_NONE
               { DROP ; UNIT }
               { COMPARE ;
                 EQ ;
                 IF { UNIT } { PUSH string "BUYER_NOT_AUTHORIZE_TO_BUY" ; FAILWITH } } } ;
         DIG 8 ;
         UNPAIR ;
         IF_LEFT
           { DIG 9 ;
             DROP ;
             IF_LEFT
               { DIG 4 ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 3 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 5 ;
                     DROP 3 ;
                     IF_LEFT
                       { PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "BUYER_CANNOT_BE_SELLER" ;
                         SENDER ;
                         DUP 3 ;
                         CDR ;
                         COMPARE ;
                         NEQ ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         GET ;
                         IF_NONE
                           { DROP 3 ; PUSH string "NO_OFFER_PLACED" ; FAILWITH }
                           { DUP 3 ;
                             SWAP ;
                             NONE address ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DUP 3 ;
                             CDR ;
                             PAIR ;
                             SENDER ;
                             DUP 4 ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             DIG 3 ;
                             SWAP ;
                             EXEC ;
                             DIG 2 ;
                             DUP ;
                             GET 7 ;
                             DUP 4 ;
                             CDR ;
                             DIG 4 ;
                             CAR ;
                             PAIR ;
                             NONE (or (pair nat address nat) mutez) ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 7 ;
                             SWAP ;
                             PAIR } }
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         VIEW "is_admin" bool ;
                         IF_NONE
                           { PUSH string "NOT_AN_ADMIN" ; FAILWITH }
                           { IF {} { PUSH string "NOT_AN_ADMIN" ; FAILWITH } } ;
                         PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         IF_LEFT
                           { IF_LEFT
                               { IF_LEFT
                                   { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 18 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     MEM ;
                                     IF { DROP 2 ; PUSH string "ALREADY_STABLE_COIN" ; FAILWITH }
                                        { SWAP ;
                                          DUP ;
                                          GET 18 ;
                                          DUP 3 ;
                                          CDR ;
                                          DIG 3 ;
                                          CAR ;
                                          SWAP ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          UPDATE 18 ;
                                          NIL operation ;
                                          PAIR } }
                                   { SWAP ;
                                     DUP ;
                                     CAR ;
                                     UNPAIR ;
                                     CDR ;
                                     DIG 3 ;
                                     PAIR ;
                                     PAIR ;
                                     UPDATE 1 ;
                                     NIL operation ;
                                     PAIR } }
                               { IF_LEFT
                                   { SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     SWAP ;
                                     DIG 2 ;
                                     CAR ;
                                     CAR ;
                                     PAIR ;
                                     UPDATE 1 ;
                                     NIL operation ;
                                     PAIR }
                                   { SWAP ;
                                     DUP ;
                                     GET 18 ;
                                     DIG 2 ;
                                     NONE nat ;
                                     SWAP ;
                                     UPDATE ;
                                     UPDATE 18 ;
                                     NIL operation ;
                                     PAIR } } }
                           { IF_LEFT
                               { IF_LEFT
                                   { SWAP ;
                                     DUP ;
                                     CAR ;
                                     DUP ;
                                     CDR ;
                                     DIG 3 ;
                                     DIG 2 ;
                                     CAR ;
                                     CAR ;
                                     PAIR ;
                                     PAIR ;
                                     UPDATE 1 ;
                                     NIL operation ;
                                     PAIR }
                                   { PUSH nat 250 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CDR ;
                                     COMPARE ;
                                     LE ;
                                     NOT ;
                                     IF { PUSH string "PERCENTAGE_MUST_BE_MAXIUM_25_PERCENT" ; FAILWITH } {} ;
                                     PUSH nat 0 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CDR ;
                                     COMPARE ;
                                     GE ;
                                     NOT ;
                                     IF { PUSH string "PERCENTAGE_MUST_BE_MINIMUM_0_PERCENT" ; FAILWITH } {} ;
                                     UPDATE 13 ;
                                     NIL operation ;
                                     PAIR } }
                               { PUSH nat 250 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 COMPARE ;
                                 LE ;
                                 NOT ;
                                 IF { PUSH string "PERCENTAGE_MUST_BE_MAXIUM_25_PERCENT" ; FAILWITH } {} ;
                                 PUSH nat 0 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 COMPARE ;
                                 GE ;
                                 NOT ;
                                 IF { PUSH string "PERCENTAGE_MUST_BE_MINIMUM_0_PERCENT" ; FAILWITH } {} ;
                                 UPDATE 15 ;
                                 NIL operation ;
                                 PAIR } } } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         PUSH string "SELLER_NOT_AUTHORIZED" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         DUP 3 ;
                         GET 3 ;
                         DUP 4 ;
                         GET 5 ;
                         COMPARE ;
                         NEQ ;
                         AND ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         NOW ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "DROP_DATE_NOT_MET" ; FAILWITH } {} ;
                         DUP 3 ;
                         SWAP ;
                         CAR ;
                         DUP 3 ;
                         GET 6 ;
                         PAIR ;
                         PAIR ;
                         SENDER ;
                         DUP 3 ;
                         GET 5 ;
                         PAIR ;
                         DUP 3 ;
                         GET 3 ;
                         DUP 4 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         DUP ;
                         DUP ;
                         DUG 4 ;
                         GET 9 ;
                         UNIT ;
                         DUP 5 ;
                         CAR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 9 ;
                         DIG 3 ;
                         GET 5 ;
                         DUP 4 ;
                         GET 3 ;
                         DIG 4 ;
                         CAR ;
                         PAIR ;
                         NONE (pair (or (pair nat address nat) mutez) timestamp) ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 5 ;
                         SWAP ;
                         PAIR }
                       { DIG 5 ;
                         DROP ;
                         PUSH string "SELLER_NOT_AUTHORIZED" ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         DUP 3 ;
                         GET 3 ;
                         DUP 4 ;
                         GET 5 ;
                         COMPARE ;
                         NEQ ;
                         AND ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         GET ;
                         IF_NONE { PUSH string "TOKEN_IS_NOT_IN_SALE" ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         SENDER ;
                         PAIR ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         DUP 3 ;
                         GET 5 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP 3 ;
                         SWAP ;
                         CAR ;
                         DUP 3 ;
                         GET 6 ;
                         PAIR ;
                         PAIR ;
                         SENDER ;
                         DUP 3 ;
                         GET 5 ;
                         PAIR ;
                         DUP 3 ;
                         GET 3 ;
                         DUP 4 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         DUP ;
                         DUP ;
                         DUG 4 ;
                         GET 9 ;
                         UNIT ;
                         DUP 5 ;
                         CAR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 9 ;
                         DIG 3 ;
                         GET 3 ;
                         DUP 4 ;
                         GET 3 ;
                         DIG 4 ;
                         CAR ;
                         PAIR ;
                         NONE (pair (or (pair nat address nat) mutez) (option address)) ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 3 ;
                         SWAP ;
                         PAIR } } }
               { DIG 2 ;
                 DIG 7 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 4 ;
                     DIG 6 ;
                     DROP 2 ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NOT ;
                         NOT ;
                         IF { PUSH string "WILL_BE_DEPRECATED" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         ITER { SWAP ;
                                DUP 3 ;
                                DUP 3 ;
                                GET 3 ;
                                PAIR ;
                                DUP 5 ;
                                SWAP ;
                                EXEC ;
                                DROP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 4 ;
                                DUP 6 ;
                                NOW ;
                                ADD ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                COMPARE ;
                                LT ;
                                IF { DROP ; PUSH string "DROP_DATE_MUST_BE_AT_LEAST_IN_A_DAY" ; FAILWITH }
                                   { PUSH int 2419200 ;
                                     NOW ;
                                     ADD ;
                                     SWAP ;
                                     COMPARE ;
                                     GT ;
                                     IF { PUSH string "DROP_DATE_MUST_BE_IN_MAXIMUM_ONE_MONTH" ; FAILWITH } {} } ;
                                PUSH string "ALREADY_DROPED" ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 5 ;
                                SENDER ;
                                DUP 5 ;
                                CAR ;
                                PAIR ;
                                MEM ;
                                NOT ;
                                NOT ;
                                IF { FAILWITH } { DROP } ;
                                PUSH string "ALREADY_DROPED" ;
                                DUP 4 ;
                                GET 11 ;
                                DUP 4 ;
                                CAR ;
                                MEM ;
                                NOT ;
                                NOT ;
                                IF { FAILWITH } { DROP } ;
                                PUSH string "CANNOT_DROP_ALREADY_SOLD_TOKEN" ;
                                DUP 4 ;
                                GET 9 ;
                                DUP 4 ;
                                CAR ;
                                MEM ;
                                NOT ;
                                NOT ;
                                IF { FAILWITH } { DROP } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                SENDER ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                DIG 2 ;
                                CAR ;
                                DIG 2 ;
                                PAIR ;
                                VIEW "is_token_minter" (option bool) ;
                                IF_NONE { PUSH bool False } { IF_NONE { PUSH bool False } {} } ;
                                PUSH bool True ;
                                SWAP ;
                                COMPARE ;
                                EQ ;
                                NOT ;
                                IF { PUSH string "NOT_AUTHORIZED_DROP_SELLER" ; FAILWITH } {} ;
                                DUP 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 11 ;
                                UNIT ;
                                DUP 5 ;
                                CAR ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 11 ;
                                SWAP ;
                                GET 5 ;
                                DUP 3 ;
                                GET 4 ;
                                DUP 4 ;
                                GET 3 ;
                                PAIR ;
                                SENDER ;
                                DIG 4 ;
                                CAR ;
                                PAIR ;
                                PAIR 3 ;
                                UNPAIR 3 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 5 } ;
                         SWAP ;
                         DIG 2 ;
                         DIG 3 ;
                         DROP 3 ;
                         NIL operation ;
                         PAIR }
                       { DIG 4 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NOT ;
                         NOT ;
                         IF { PUSH string "WILL_BE_DEPRECATED" ; FAILWITH } {} ;
                         PUSH string "OFFER_ALREADY_PLACED" ;
                         DUP 3 ;
                         GET 7 ;
                         SENDER ;
                         DUP 4 ;
                         CAR ;
                         PAIR ;
                         MEM ;
                         NOT ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         PUSH string "SOURCE_SHOULD_BE_SENDER" ;
                         SOURCE ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         GET 7 ;
                         DUP 3 ;
                         CDR ;
                         SENDER ;
                         DIG 4 ;
                         CAR ;
                         PAIR ;
                         PAIR 3 ;
                         UNPAIR 3 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 7 ;
                         NIL operation ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 3 ;
                         PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         NOT ;
                         NOT ;
                         IF { PUSH string "WILL_BE_DEPRECATED" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         ITER { SWAP ;
                                DUP 3 ;
                                DUP 3 ;
                                GET 3 ;
                                PAIR ;
                                DUP 5 ;
                                SWAP ;
                                EXEC ;
                                DROP ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                IF_NONE
                                  { UNIT }
                                  { PUSH string "BUYER_CANNOT_BE_SELLER" ;
                                    SENDER ;
                                    DIG 2 ;
                                    COMPARE ;
                                    NEQ ;
                                    NOT ;
                                    IF { FAILWITH } { DROP ; UNIT } } ;
                                DROP ;
                                PUSH string "ALREADY_ON_SALE" ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 3 ;
                                SENDER ;
                                DUP 5 ;
                                GET 4 ;
                                PAIR ;
                                MEM ;
                                NOT ;
                                NOT ;
                                IF { FAILWITH } { DROP } ;
                                DUP 3 ;
                                SWAP ;
                                GET 3 ;
                                DUP 3 ;
                                CAR ;
                                DUP 4 ;
                                GET 3 ;
                                PAIR ;
                                SENDER ;
                                DUP 5 ;
                                GET 4 ;
                                CDR ;
                                DIG 5 ;
                                GET 4 ;
                                CAR ;
                                PAIR ;
                                PAIR ;
                                PAIR 3 ;
                                UNPAIR 3 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                UPDATE 3 } ;
                         SWAP ;
                         DIG 2 ;
                         DROP 2 ;
                         NIL operation ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                         PUSH mutez 0 ;
                         AMOUNT ;
                         COMPARE ;
                         EQ ;
                         NOT ;
                         IF { FAILWITH } { DROP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         ITER { SWAP ;
                                DUP ;
                                SENDER ;
                                DUP 4 ;
                                PAIR ;
                                PAIR ;
                                DUP 7 ;
                                SWAP ;
                                EXEC ;
                                PUSH string "DROP_CANNOT_BE_REVOKED" ;
                                NOW ;
                                DUP 7 ;
                                DUP 4 ;
                                CDR ;
                                SUB ;
                                COMPARE ;
                                GT ;
                                DUP 8 ;
                                DUP 4 ;
                                CDR ;
                                ADD ;
                                NOW ;
                                COMPARE ;
                                GT ;
                                OR ;
                                NOT ;
                                IF { FAILWITH } { DROP } ;
                                NOW ;
                                DUP 6 ;
                                DIG 2 ;
                                CDR ;
                                SUB ;
                                COMPARE ;
                                GT ;
                                IF { DUP 3 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     GET 5 ;
                                     SENDER ;
                                     DUP 5 ;
                                     PAIR ;
                                     NONE (pair (or (pair nat address nat) mutez) timestamp) ;
                                     SWAP ;
                                     UPDATE ;
                                     UPDATE 5 ;
                                     SWAP ;
                                     GET 11 ;
                                     DIG 2 ;
                                     NONE unit ;
                                     SWAP ;
                                     UPDATE ;
                                     UPDATE 11 }
                                   { DUP 3 ;
                                     SWAP ;
                                     GET 5 ;
                                     SENDER ;
                                     DIG 3 ;
                                     PAIR ;
                                     NONE (pair (or (pair nat address nat) mutez) timestamp) ;
                                     SWAP ;
                                     UPDATE ;
                                     UPDATE 5 } } ;
                         SWAP ;
                         DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DROP 4 ;
                         NIL operation ;
                         PAIR } } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 5 ;
             DIG 6 ;
             DIG 7 ;
             DIG 8 ;
             DROP 6 ;
             IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { FAILWITH } { DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 7 ;
                     SENDER ;
                     DUP 3 ;
                     PAIR ;
                     GET ;
                     IF_NONE
                       { DROP 3 ; PUSH string "NO_OFFER_PLACED" ; FAILWITH }
                       { SENDER ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         DUP ;
                         GET 7 ;
                         SENDER ;
                         DIG 5 ;
                         PAIR ;
                         NONE (or (pair nat address nat) mutez) ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 7 ;
                         DIG 2 ;
                         IF_LEFT
                           { DIG 2 ; DROP 2 ; NIL operation }
                           { NIL operation ; DIG 3 ; DIG 2 ; UNIT ; TRANSFER_TOKENS ; CONS } ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { FAILWITH } { DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     ITER { SWAP ;
                            PUSH string "NOT_SELLER_OR_NOT_FOR_SALE" ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 3 ;
                            SENDER ;
                            DUP 5 ;
                            PAIR ;
                            MEM ;
                            NOT ;
                            IF { FAILWITH } { DROP } ;
                            DUP 3 ;
                            SWAP ;
                            GET 3 ;
                            SENDER ;
                            DIG 3 ;
                            PAIR ;
                            NONE (pair (or (pair nat address nat) mutez) (option address)) ;
                            SWAP ;
                            UPDATE ;
                            UPDATE 3 } ;
                     SWAP ;
                     DROP ;
                     NIL operation ;
                     PAIR } }
               { DIG 3 ;
                 DROP ;
                 PUSH string "AMOUNT_SHOULD_BE_0TEZ" ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { FAILWITH } { DROP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 ITER { SWAP ;
                        DUP 3 ;
                        DUP 3 ;
                        GET 3 ;
                        PAIR ;
                        DUP 5 ;
                        SWAP ;
                        EXEC ;
                        DROP ;
                        PUSH string "NOT_SELLER_OR_NOT_FOR_SALE" ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET 3 ;
                        SENDER ;
                        DUP 5 ;
                        GET 4 ;
                        PAIR ;
                        MEM ;
                        NOT ;
                        IF { FAILWITH } { DROP } ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        IF_NONE
                          { UNIT }
                          { PUSH string "BUYER_CANNOT_BE_SELLER" ;
                            SENDER ;
                            DIG 2 ;
                            COMPARE ;
                            NEQ ;
                            NOT ;
                            IF { FAILWITH } { DROP ; UNIT } } ;
                        DROP ;
                        DUP 3 ;
                        SWAP ;
                        GET 3 ;
                        DUP 3 ;
                        CAR ;
                        DUP 4 ;
                        GET 3 ;
                        PAIR ;
                        SOME ;
                        SENDER ;
                        DIG 4 ;
                        GET 4 ;
                        PAIR ;
                        PAIR 3 ;
                        UNPAIR 3 ;
                        UPDATE ;
                        UPDATE 3 } ;
                 SWAP ;
                 DIG 2 ;
                 DROP 2 ;
                 NIL operation ;
                 PAIR } } } }

